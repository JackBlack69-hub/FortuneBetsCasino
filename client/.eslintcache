[
    {
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/index.js": "1",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Race.jsx": "2",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Crash.jsx": "3",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Login.jsx": "4",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Roulette.jsx": "5",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Maintenance.jsx": "6",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Terms.jsx": "7",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Fair.jsx": "8",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/AffiliatesRedirect.jsx": "9",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/components/chat/Chat.jsx": "10",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/actions/types.js": "11",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/utils/parseCommasToThousands.js": "12",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/components/RaceAmount.jsx": "13",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Profile.jsx": "14",
        "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/components/MobileNav.jsx": "15",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Crash.jsx": "16",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/App.js": "17",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Affiliates.jsx": "18",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/index.js": "19",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Cups.jsx": "20",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/serviceWorker.js": "21",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/Footer.jsx": "22",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/Navbar.jsx": "23",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Profile.jsx": "24",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Fair.jsx": "25",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Roulette.jsx": "26",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/services/api.service.js": "27",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/History_Error.jsx": "28",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/MobileNav.jsx": "29",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/RaceHistory.jsx": "30",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Registration.jsx": "31",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/Preloader.js": "32",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/Result.jsx": "33",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/roulette/Bets.jsx": "34",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/cups/Game.jsx": "35",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/cups/PlayAmount.jsx": "36",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/Waiting.jsx": "37",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/controls/Color.jsx": "38",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/CupsGames.jsx": "39",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/cups/GameList.jsx": "40",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/chat/Header.jsx": "41",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/FreeModal.jsx": "42",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/reducers/auth.js": "43",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/controls/Players.jsx": "44",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/utils/parseCommasToThousands.js": "45",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/chat/Controls.jsx": "46",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/chat/Messages.jsx": "47",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/chat/ModeratedMessage.jsx": "48",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/CouponModal.jsx": "49",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/DepositModal.jsx": "50",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/crash/Cup.jsx": "51",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/TipModal.jsx": "52",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/deposit/Skins.jsx": "53",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/Chose.jsx": "54",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/PrevGame.jsx": "55",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/History.jsx": "56",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Race.jsx": "57",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Jackpot.jsx": "58",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/TimerBar.js": "59",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/TimerBarR.js": "60",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/pfCodeSamples.js": "61",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/roulette/PlayAmount.jsx": "62",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/PrivateGameJoinModal.jsx": "63",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/chat/SkeletonMessage.jsx": "64",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/Explode.jsx": "65",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/crash/HistoryEntry.jsx": "66",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/crash/PlayAmount.jsx": "67",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/withdraw/Bitcoin.jsx": "68",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/withdraw/Litecoin.jsx": "69",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/withdraw/Ethereum.jsx": "70",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/RaceAmount.jsx": "71",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/RoundSkeleton.jsx": "72",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/deposit/Bitcoin.jsx": "73",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/deposit/Litecoin.jsx": "74",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/actions/auth.js": "75",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/PlayAmount.jsx": "76",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/crash/Bets.jsx": "77",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/cups/JoinableAmount.jsx": "78",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/roulette/Wheel.jsx": "79",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/cups/TotalAmount.jsx": "80",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/AccountVerificationModal.jsx": "81",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/MarketModal.jsx": "82",
        "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/store.js": "83"
    },
    {
        "size": 452,
        "mtime": 1606500974000,
        "results": "84",
        "hashOfConfig": "85"
    },
    {
        "size": 15915,
        "mtime": 1647866930000,
        "results": "86",
        "hashOfConfig": "85"
    },
    {
        "size": 26906,
        "mtime": 1637791666000,
        "results": "87",
        "hashOfConfig": "85"
    },
    {
        "size": 3599,
        "mtime": 1606846176000,
        "results": "88",
        "hashOfConfig": "85"
    },
    {
        "size": 30486,
        "mtime": 1637845212000,
        "results": "89",
        "hashOfConfig": "85"
    },
    {
        "size": 1306,
        "mtime": 1665860446579,
        "results": "90",
        "hashOfConfig": "85"
    },
    {
        "size": 10783,
        "mtime": 1665860446579,
        "results": "91",
        "hashOfConfig": "85"
    },
    {
        "size": 4993,
        "mtime": 1636381486000,
        "results": "92",
        "hashOfConfig": "85"
    },
    {
        "size": 346,
        "mtime": 1603215602000,
        "results": "93",
        "hashOfConfig": "85"
    },
    {
        "size": 3046,
        "mtime": 1635432808000,
        "results": "94",
        "hashOfConfig": "85"
    },
    {
        "size": 565,
        "mtime": 1603215602000,
        "results": "95",
        "hashOfConfig": "85"
    },
    {
        "size": 181,
        "mtime": 1603215602000,
        "results": "96",
        "hashOfConfig": "85"
    },
    {
        "size": 1050,
        "mtime": 1636941200000,
        "results": "97",
        "hashOfConfig": "85"
    },
    {
        "size": 21586,
        "mtime": 1639085902000,
        "results": "98",
        "hashOfConfig": "85"
    },
    {
        "size": 10159,
        "mtime": 1635421868000,
        "results": "99",
        "hashOfConfig": "85"
    },
    {
        "size": 26959,
        "mtime": 1667857246926,
        "results": "100",
        "hashOfConfig": "101"
    },
    {
        "size": 8467,
        "mtime": 1667477658896,
        "results": "102",
        "hashOfConfig": "101"
    },
    {
        "size": 16622,
        "mtime": 1667319214277,
        "results": "103",
        "hashOfConfig": "101"
    },
    {
        "size": 452,
        "mtime": 1606500974000,
        "results": "104",
        "hashOfConfig": "105"
    },
    {
        "size": 14788,
        "mtime": 1668026562180,
        "results": "106",
        "hashOfConfig": "101"
    },
    {
        "size": 5098,
        "mtime": 1603215602000,
        "results": "107",
        "hashOfConfig": "101"
    },
    {
        "size": 8286,
        "mtime": 1666462772137,
        "results": "108",
        "hashOfConfig": "101"
    },
    {
        "size": 47499,
        "mtime": 1667851972789,
        "results": "109",
        "hashOfConfig": "101"
    },
    {
        "size": 21369,
        "mtime": 1667319349801,
        "results": "110",
        "hashOfConfig": "101"
    },
    {
        "size": 5226,
        "mtime": 1667379912294,
        "results": "111",
        "hashOfConfig": "101"
    },
    {
        "size": 29624,
        "mtime": 1667319452227,
        "results": "112",
        "hashOfConfig": "101"
    },
    {
        "size": 11960,
        "mtime": 1667585282422,
        "results": "113",
        "hashOfConfig": "101"
    },
    {
        "size": 1555,
        "mtime": 1665860433954,
        "results": "114",
        "hashOfConfig": "101"
    },
    {
        "size": 10377,
        "mtime": 1667047665398,
        "results": "115",
        "hashOfConfig": "101"
    },
    {
        "size": 14427,
        "mtime": 1667319403230,
        "results": "116",
        "hashOfConfig": "101"
    },
    {
        "size": 12988,
        "mtime": 1666100868404,
        "results": "117",
        "hashOfConfig": "101"
    },
    {
        "size": 879,
        "mtime": 1667323874833,
        "results": "118",
        "hashOfConfig": "101"
    },
    {
        "size": 3030,
        "mtime": 1667991304459,
        "results": "119",
        "hashOfConfig": "101"
    },
    {
        "size": 3481,
        "mtime": 1637795046000,
        "results": "120",
        "hashOfConfig": "101"
    },
    {
        "size": 29521,
        "mtime": 1668026521783,
        "results": "121",
        "hashOfConfig": "101"
    },
    {
        "size": 1469,
        "mtime": 1667583889219,
        "results": "122",
        "hashOfConfig": "101"
    },
    {
        "size": 1139,
        "mtime": 1667318847907,
        "results": "123",
        "hashOfConfig": "101"
    },
    {
        "size": 4700,
        "mtime": 1667223107947,
        "results": "124",
        "hashOfConfig": "101"
    },
    {
        "size": 26233,
        "mtime": 1668026613291,
        "results": "125",
        "hashOfConfig": "101"
    },
    {
        "size": 23198,
        "mtime": 1668023210620,
        "results": "126",
        "hashOfConfig": "101"
    },
    {
        "size": 7194,
        "mtime": 1667479426378,
        "results": "127",
        "hashOfConfig": "101"
    },
    {
        "size": 9546,
        "mtime": 1667306920724,
        "results": "128",
        "hashOfConfig": "101"
    },
    {
        "size": 1581,
        "mtime": 1667479555530,
        "results": "129",
        "hashOfConfig": "101"
    },
    {
        "size": 3246,
        "mtime": 1667035091519,
        "results": "130",
        "hashOfConfig": "101"
    },
    {
        "size": 181,
        "mtime": 1603215602000,
        "results": "131",
        "hashOfConfig": "101"
    },
    {
        "size": 4141,
        "mtime": 1667476720178,
        "results": "132",
        "hashOfConfig": "101"
    },
    {
        "size": 6121,
        "mtime": 1667478656134,
        "results": "133",
        "hashOfConfig": "101"
    },
    {
        "size": 8950,
        "mtime": 1667478646589,
        "results": "134",
        "hashOfConfig": "101"
    },
    {
        "size": 6721,
        "mtime": 1666811576725,
        "results": "135",
        "hashOfConfig": "101"
    },
    {
        "size": 6488,
        "mtime": 1667306832697,
        "results": "136",
        "hashOfConfig": "101"
    },
    {
        "size": 7048,
        "mtime": 1667318681094,
        "results": "137",
        "hashOfConfig": "101"
    },
    {
        "size": 4283,
        "mtime": 1667465503597,
        "results": "138",
        "hashOfConfig": "101"
    },
    {
        "size": 6932,
        "mtime": 1667383909817,
        "results": "139",
        "hashOfConfig": "101"
    },
    {
        "size": 1314,
        "mtime": 1666812502235,
        "results": "140",
        "hashOfConfig": "101"
    },
    {
        "size": 7032,
        "mtime": 1666812713932,
        "results": "141",
        "hashOfConfig": "101"
    },
    {
        "size": 11158,
        "mtime": 1667319283454,
        "results": "142",
        "hashOfConfig": "101"
    },
    {
        "size": 15411,
        "mtime": 1667319363169,
        "results": "143",
        "hashOfConfig": "101"
    },
    {
        "size": 47583,
        "mtime": 1667319531215,
        "results": "144",
        "hashOfConfig": "101"
    },
    {
        "size": 859,
        "mtime": 1666813410474,
        "results": "145",
        "hashOfConfig": "101"
    },
    {
        "size": 860,
        "mtime": 1666813424438,
        "results": "146",
        "hashOfConfig": "101"
    },
    {
        "size": 6007,
        "mtime": 1667377660963,
        "results": "147",
        "hashOfConfig": "101"
    },
    {
        "size": 1127,
        "mtime": 1637032448000,
        "results": "148",
        "hashOfConfig": "101"
    },
    {
        "size": 3214,
        "mtime": 1667045942139,
        "results": "149",
        "hashOfConfig": "101"
    },
    {
        "size": 6557,
        "mtime": 1635433932000,
        "results": "150",
        "hashOfConfig": "101"
    },
    {
        "size": 1064,
        "mtime": 1605931868000,
        "results": "151",
        "hashOfConfig": "101"
    },
    {
        "size": 2867,
        "mtime": 1667312977465,
        "results": "152",
        "hashOfConfig": "101"
    },
    {
        "size": 1337,
        "mtime": 1667313044994,
        "results": "153",
        "hashOfConfig": "101"
    },
    {
        "size": 7974,
        "mtime": 1667316781649,
        "results": "154",
        "hashOfConfig": "101"
    },
    {
        "size": 8101,
        "mtime": 1667316551089,
        "results": "155",
        "hashOfConfig": "101"
    },
    {
        "size": 7957,
        "mtime": 1667316767536,
        "results": "156",
        "hashOfConfig": "101"
    },
    {
        "size": 1132,
        "mtime": 1667319143336,
        "results": "157",
        "hashOfConfig": "101"
    },
    {
        "size": 1062,
        "mtime": 1667319166853,
        "results": "158",
        "hashOfConfig": "101"
    },
    {
        "size": 6794,
        "mtime": 1667383888733,
        "results": "159",
        "hashOfConfig": "101"
    },
    {
        "size": 6556,
        "mtime": 1667383910490,
        "results": "160",
        "hashOfConfig": "101"
    },
    {
        "size": 2457,
        "mtime": 1603215602000,
        "results": "161",
        "hashOfConfig": "101"
    },
    {
        "size": 1118,
        "mtime": 1637032442000,
        "results": "162",
        "hashOfConfig": "101"
    },
    {
        "size": 4274,
        "mtime": 1667574657970,
        "results": "163",
        "hashOfConfig": "101"
    },
    {
        "size": 1556,
        "mtime": 1667946718114,
        "results": "164",
        "hashOfConfig": "101"
    },
    {
        "size": 925,
        "mtime": 1603215602000,
        "results": "165",
        "hashOfConfig": "101"
    },
    {
        "size": 1664,
        "mtime": 1667904693507,
        "results": "166",
        "hashOfConfig": "101"
    },
    {
        "size": 15469,
        "mtime": 1636145170000,
        "results": "167",
        "hashOfConfig": "101"
    },
    {
        "size": 4737,
        "mtime": 1637783694000,
        "results": "168",
        "hashOfConfig": "101"
    },
    {
        "size": 383,
        "mtime": 1603215602000,
        "results": "169",
        "hashOfConfig": "101"
    },
    {
        "filePath": "170",
        "messages": "171",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "172"
    },
    "10404gk",
    {
        "filePath": "173",
        "messages": "174",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 3,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": null
    },
    {
        "filePath": "175",
        "messages": "176",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": null
    },
    {
        "filePath": "177",
        "messages": "178",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "179",
        "messages": "180",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 5,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": null
    },
    {
        "filePath": "181",
        "messages": "182",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "183",
        "messages": "184",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "185",
        "messages": "186",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "187",
        "messages": "188",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "189",
        "messages": "190",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "191",
        "messages": "192",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "193",
        "messages": "194",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "195",
        "messages": "196",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "197",
        "messages": "198",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 7,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "199"
    },
    {
        "filePath": "200",
        "messages": "201",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 5,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": null
    },
    {
        "filePath": "202",
        "messages": "203",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "204"
    },
    "1r9zqkm",
    {
        "filePath": "205",
        "messages": "206",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "204"
    },
    {
        "filePath": "207",
        "messages": "208",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "209"
    },
    {
        "filePath": "210",
        "messages": "211",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    "97adge",
    {
        "filePath": "212",
        "messages": "213",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "214",
        "messages": "215",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "216"
    },
    {
        "filePath": "217",
        "messages": "218",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "219",
        "messages": "220",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "221",
        "messages": "222",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 1,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "223",
        "usedDeprecatedRules": "204"
    },
    {
        "filePath": "224",
        "messages": "225",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "226"
    },
    {
        "filePath": "227",
        "messages": "228",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 1,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "229",
        "usedDeprecatedRules": "204"
    },
    {
        "filePath": "230",
        "messages": "231",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "232",
        "messages": "233",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "234",
        "messages": "235",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "236",
        "messages": "237",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "216"
    },
    {
        "filePath": "238",
        "messages": "239",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "240"
    },
    {
        "filePath": "241",
        "messages": "242",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "243",
        "messages": "244",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "245",
        "messages": "246",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "247",
        "messages": "248",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "249",
        "messages": "250",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "251",
        "messages": "252",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "253",
        "messages": "254",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "255",
        "messages": "256",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "257",
        "messages": "258",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "259",
        "messages": "260",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "261",
        "messages": "262",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "263",
        "messages": "264",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 1,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "265",
        "usedDeprecatedRules": "266"
    },
    {
        "filePath": "267",
        "messages": "268",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "266"
    },
    {
        "filePath": "269",
        "messages": "270",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "271"
    },
    {
        "filePath": "272",
        "messages": "273",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "274",
        "messages": "275",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "276",
        "messages": "277",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "278",
        "messages": "279",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "209"
    },
    {
        "filePath": "280",
        "messages": "281",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "282",
        "messages": "283",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "284",
        "messages": "285",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "266"
    },
    {
        "filePath": "286",
        "messages": "287",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "288",
        "messages": "289",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "290",
        "messages": "291",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "292",
        "messages": "293",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "294",
        "messages": "295",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "204"
    },
    {
        "filePath": "296",
        "messages": "297",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 1,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "298"
    },
    {
        "filePath": "299",
        "messages": "300",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "301"
    },
    {
        "filePath": "302",
        "messages": "303",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "266"
    },
    {
        "filePath": "304",
        "messages": "305",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "306",
        "messages": "307",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "308"
    },
    {
        "filePath": "309",
        "messages": "310",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "311",
        "messages": "312",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "313",
        "messages": "314",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "315",
        "messages": "316",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "317",
        "messages": "318",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "319"
    },
    {
        "filePath": "320",
        "messages": "321",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "322",
        "messages": "323",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "324",
        "messages": "325",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "326",
        "messages": "327",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "328",
        "messages": "329",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "330",
        "messages": "331",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "332",
        "messages": "333",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "266"
    },
    {
        "filePath": "334",
        "messages": "335",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": "308"
    },
    {
        "filePath": "336",
        "messages": "337",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "338",
        "messages": "339",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "340",
        "messages": "341",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "342",
        "messages": "343",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "344",
        "messages": "345",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "346",
        "messages": "347",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "348",
        "messages": "349",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    {
        "filePath": "350",
        "messages": "351",
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0
    },
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/index.js",
    [],
    [
        "352",
        "353"
    ],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Race.jsx",
    [
        "354",
        "355",
        "356"
    ],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Crash.jsx",
    [
        "357",
        "358"
    ],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Login.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Roulette.jsx",
    [
        "359",
        "360",
        "361",
        "362",
        "363"
    ],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Maintenance.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Terms.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Fair.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/AffiliatesRedirect.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/components/chat/Chat.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/actions/types.js",
    [],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/utils/parseCommasToThousands.js",
    [],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/components/RaceAmount.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/views/Profile.jsx",
    [
        "364",
        "365",
        "366",
        "367",
        "368",
        "369",
        "370"
    ],
    "import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { getUserProfileData } from \"../services/api.service\";\nimport parseCommasToThousands from \"../utils/parseCommasToThousands\";\nimport cutDecimalPoints from \"../utils/cutDecimalPoints\";\nimport { logout } from \"../actions/auth\";\n\n// MUI Components\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport SelfExcludeModal from \"../components/modals/SelfExcludeModal\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Vip from \"../components/modals/VIPModal\";\n\n// Icons\nimport VideogameAssetIcon from \"@material-ui/icons/VideogameAsset\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\n\n// Components\nimport AccountVerificationModal from \"../components/modals/AccountVerificationModal\";\n\nimport { chatSocket } from \"../services/websocket.service\";\n\n// Custom styles\nconst useStyles = makeStyles(theme => ({\n  profile: {\n    margin: \"5rem 0\",\n    color: \"#e0e0e0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"2rem 0\",\n    },\n    \"& > h1\": {\n      color: \"#e4e4e4\",\n      fontFamily: \"Rubik\",\n      fontSize: \"20px\",\n      fontWeight: 500,\n      letterSpacing: \".1em\",\n      margin: 0,\n      marginBottom: \"1rem\",\n    },\n  },\n  userWrap: {\n    display: \"flex\",\n    background: \"#272b2f\",\n    boxShadow: \"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\",\n    borderRadius: \"0.25rem\",\n    padding: \"2rem\",\n  },\n  user: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > h1\": {\n      margin: 0,\n      color: \"#e0e0e0\",\n      fontFamily: \"Rubik\",\n      fontSize: \"16px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n    },\n    \"& > h5\": {\n      margin: 0,\n      textTransform: \"uppercase\",\n      color: \"#9d9d9d\",\n      fontFamily: \"Rubik\",\n      fontSize: \"13px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n    },\n  },\n  buttontest: {\n    color: \"#e4e4e4\",\n    fontFamily: \"Rubik\",\n    fontSize: \"13px\",\n    fontWeight: 500,\n    letterSpacing: \".1em\",\n  },\n  pfp: {\n    height: \"70px\",\n    width: \"70px\",\n    borderRadius: \"100%\",\n    boxShadow: \"2px 2px 10px 1px #1b1c1c\",\n  },\n  logoutt: {\n    textAlign: \"center\",\n  },\n  bet: {\n    minWidth: \"fit-content\",\n    textAlign: \"center\",\n    backgroundColor: \"#f44336\",\n    borderColor: \"#f44336\",\n    boxShadow: \"0 1.5px #191e24\",\n    color: \"white\",\n    textTransform: \"capitalize\",\n    \"&:hover\": {\n      backgroundColor: \"#f44336\",\n    },\n  },\n  grid: {\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    margin: \"1rem 0 2rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      flexWrap: \"wrap\",\n      flexDirection: \"column\",\n    },\n    \"& > div\": {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      background: \"#272b2f\",\n      boxShadow: \"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\",\n      width: \"19%\",\n      height: \"7rem\",\n      padding: \"0 2rem\",\n      borderRadius: \"0.25rem\",\n      color: \"#9d9d9d\",\n      fontFamily: \"Rubik\",\n      fontSize: \"13px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"100%\",\n        marginBottom: 10,\n      },\n      \"& svg\": {\n        marginRight: \"0.25rem\",\n        color: \"#2196f3\",\n      },\n      \"& h1\": {\n        margin: 0,\n        color: \"#e0e0e0\",\n        fontFamily: \"Rubik\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        letterSpacing: \".05em\",\n      },\n    },\n  },\n  tran: {\n    background: \"#272b2f\",\n    borderRadius: \"6px\",\n    padding: \"2rem\",\n    paddingTop: \"1rem\",\n    maxHeight: \"23rem\",\n    overflowY: \"auto\",\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: \"1rem\",\n    },\n    \"& th\": {\n      borderBottom: \"none\",\n      color: \"#4caf50\",\n      fontFamily: \"Rubik\",\n      fontSize: \"14px\",\n      fontWeight: 500,\n      letterSpacing: \".1em\",\n      textTransform: \"uppercase\",\n      paddingLeft: 0,\n    },\n    \"& td\": {\n      borderBottom: \"3px #272b2f solid\",\n      background: \"#212529\",\n      color: \"#9d9d9d\",\n      fontFamily: \"Rubik\",\n      fontSize: \"13px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n      paddingLeft: 0,\n      // textShadow: \"0px 0px 20px\",\n      \"&:nth-child(1)\": {\n        paddingLeft: \"1rem\",\n      },\n      \"&:nth-child(n+1):nth-child(-n+3)\": {\n        color: \"#9d9d9d\",\n        fontFamily: \"Rubik\",\n        fontSize: \"13px\",\n        fontWeight: 500,\n        letterSpacing: \".05em\",\n      },\n    },\n  },\n  notVerified: {\n    background: \"#272b2f\",\n    boxShadow: \"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\",\n    color: \"#e0e0e0\",\n    fontFamily: \"Rubik\",\n    fontSize: \"14px\",\n    fontWeight: 500,\n    letterSpacing: \".05em\",\n    padding: \"1rem 2rem\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    marginBottom: \"1rem\",\n    borderRadius: \"0.25rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: \"1rem\",\n    },\n    \"& > div\": {\n      margin: \"0 auto 0 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    \"& svg\": {\n      marginRight: \"1rem\",\n      color: \"#2196f3\",\n    },\n  },\n  verifyBtn: {\n    backgroundColor: \"#273a4f\",\n    borderColor: \"#273a4f\",\n    color: \"#e0e0e0\",\n    fontFamily: \"Rubik\",\n    fontSize: \"13px\",\n    fontWeight: 500,\n    letterSpacing: \".1em\",\n    padding: \"0.3rem 2rem\",\n    textTransform: \"capitalize\",\n    marginLeft: \"1rem\",\n    \"&:hover\": {\n      backgroundColor: \"#273a4f\",\n    },\n  },\n  reverse: {\n    fontFamily: \"Rubik\",\n  },\n  nonenav: {\n    color: \"#d5d6d8\",\n    fontSize: \"11px\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    textTransform: \"uppercase\",\n  },\n  bronzenav: {\n    color: \"#C27C0E\",\n    fontSize: \"11px\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    textTransform: \"uppercase\",\n  },\n  silvernav: {\n    color: \"#95A5A6\",\n    fontSize: \"11px\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    textTransform: \"uppercase\",\n  },\n  goldnav: {\n    color: \"#b99309\",\n    fontSize: \"11px\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    textTransform: \"uppercase\",\n  },\n  diamondnav: {\n    color: \"#3498DB\",\n    fontSize: \"11px\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    textTransform: \"uppercase\",\n  },\n  progressbox: {\n    position: \"relative\",\n    \"& > div > .MuiOutlinedInput-root\": {\n      background: \"#212529\",\n      \"& > input\": {\n        color: \"#cccc\",\n        fontFamily: \"Rubik\",\n        marginRight: \"100px\",\n        fontSize: \"14px\",\n      },\n    },\n    \"& > div\": {\n      width: \"100%\",\n      \"& label\": {\n        color: \"#ff9800\",\n        fontFamily: \"Rubik\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        letterSpacing: \".1em\",\n      },\n      \"& label.Mui-focused\": {\n        color: \"#ff9800\",\n      },\n      \"& .MuiInput-underline:after\": {\n        borderBottomColor: \"#1b1c1c\",\n      },\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: \"#1b1c1c\",\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#1b1c1c\",\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"#1b1c1c\",\n        },\n      },\n    },\n    \"& > button\": {\n      position: \"absolute\",\n      right: 10,\n      top: 10,\n      width: \"7rem\",\n      background: \"#264d68\",\n      color: \"#e4e4e4\",\n      \"&:hover\": {\n        background: \"#264d68\",\n      },\n      \"& .MuiButton-label\": {\n      },\n    },\n    \"& > img\": {\n      position: \"absolute\",\n      top: -10,\n      zIndex: 1000,\n    },\n  },\n  loader: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"36rem\",\n  },\n  noTransactions: {\n    width: \"100%\",\n    textAlign: \"center\",\n    padding: \"2rem 0 1rem 0\",\n    color: \"#9d9d9d\",\n    fontFamily: \"Rubik\",\n    fontSize: \"14px\",\n    fontWeight: 500,\n    letterSpacing: \".1em\",\n  },\n  verifybutton: {\n    color: \"#5f6368\",\n  },\n}));\n\n// Custom Component\nconst ColorCircularProgress = withStyles({\n  root: {\n    color: \"#4f79fd\",\n  },\n})(CircularProgress);\n\nconst Profile = ({ isLoading, isAuthenticated, user, logout }) => {\n  // Declare State\n  const classes = useStyles();\n  const [openSelfexcludeModal, setOpenSelfexcludeModal] = useState(false);\n  const [displayname, setDisplayname] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [profile, setProfile] = useState(null);\n  const [openVip, setOpenVip] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const open = Boolean(anchorEl);\n\n  // Get profile data from API\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const data = await getUserProfileData();\n\n      // Update state\n      setProfile(data);\n      setDisplayname(user.username);\n      setLoading(false);\n    } catch (error) {\n      console.log(\"There was an error while loading user profile data:\", error);\n    }\n  };\n\n  // Get verbal month from js month index\n  const getMonthFromIndex = index => {\n    switch (index) {\n      default:\n      case 0:\n        return \"JAN\";\n      case 1:\n        return \"FEB\";\n      case 2:\n        return \"MAR\";\n      case 3:\n        return \"APR\";\n      case 4:\n        return \"MAY\";\n      case 5:\n        return \"JUN\";\n      case 6:\n        return \"JUL\";\n      case 7:\n        return \"AUG\";\n      case 8:\n        return \"SEP\";\n      case 9:\n        return \"OCT\";\n      case 10:\n        return \"NOV\";\n      case 11:\n        return \"DEC\";\n    }\n  };\n\n  // Parse unix timestamp to readable format\n  const parseDate = timestamp => {\n    const d = new Date(timestamp);\n    return `${getMonthFromIndex(\n      d.getMonth()\n    )} ${d.getDate()}, ${d.getFullYear()}, ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n  };\n\n  // Parse numeric status to readable format\n  const parseState = state => {\n    switch (state) {\n      default:\n      case 1:\n        return \"PENDING\";\n      case 2:\n        return \"DECLINED\";\n      case 3:\n        return \"COMPLETED\";\n      case 4:\n        return \"MANUAL CONFIRMATION NEEDED\";\n    }\n  };\n\n  // Open verification modal\n  const onClick = () => {\n    setModalVisible(state => !state);\n  };\n\n  // Set display name through chat socket\n  const changeDisplayname = () => {\n    chatSocket.emit(\"set-displayname\", displayname);\n  }\n\n  // Input onChange event handler\n  const onChangeDisplayname = e => {\n    setDisplayname(e.target.value);\n  };\n\n  // componentDidMount\n  useEffect(() => {\n    if (!isLoading && isAuthenticated) fetchData();\n  }, [isLoading, isAuthenticated]);\n\n  // If user is not logged in\n  if (!isLoading && !isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return isLoading || !user ? (\n    <div className={classes.loader}>\n      <ColorCircularProgress />\n    </div>\n  ) : (\n    <div>\n      <AccountVerificationModal\n        open={modalVisible}\n        handleClose={() => setModalVisible(state => !state)}\n      />\n      <Vip handleClose={() => setOpenVip(!openVip)} open={openVip} />\n      <Box>\n        <Container maxWidth=\"lg\">\n          <Box className={classes.profile}>\n            {!loading && !profile.hasVerifiedAccount && (\n              <Box className={classes.notVerified}>\n                <div>\n                  <SecurityIcon />\n                  <p>\n                    We need additional information to verify your account. After\n                    verification you can claim your free $0.5!\n                  </p>\n                </div>\n                <Button\n                  className={classes.verifyBtn}\n                  size=\"medium\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={onClick}\n                >\n                  <span className={classes.reverse}>VERIFY NOW</span>\n                </Button>\n              </Box>\n            )}\n            <h1>🔎 PROFILE</h1>\n            <Box className={classes.userWrap}>\n              <Box className={classes.user}>\n              <Avatar\n                className={classes.pfp}\n                src={user.avatar}\n                variant=\"rounded\"\n              />\n              <h5 style={{ textTransform: \"none\", color: \"#ff9800\", marginTop: \"23px\", marginBottom: \"2px\", marginLeft: \"2px\", }}>USERNAME:</h5>\n                <Box position=\"relative\" className={classes.progressbox} style={{ marginBottom: \"20px\", }}>\n                <TextField\n                  name=\"name\"\n                  className=\"input\"\n                  variant=\"outlined\"\n                  inputProps={{ maxLength: 16 }}\n                  placeholder=\"#USERNAME\"\n                  onChange={onChangeDisplayname}\n                  value={displayname}\n                />\n                <Button \n                onClick={changeDisplayname}\n                className={classes.buttontest}\n                variant=\"contained\"\n                style={{ fontFamily: \"Rubik\", background: \"#009688\", }}\n                >CHANGE</Button>\n                </Box>\n                <h5 style={{ textTransform: \"none\", color: \"#5a5a5a\", }}>UID: <span style={{ color:\"#4CAF50\", }}>{user._id}</span></h5>\n                <h5>Registered {parseDate(user.created)}</h5>\n                <br/>\n              <Box>\n                <Button \n                 className={classes.buttontest}\n                 variant=\"contained\"\n                 style={{ fontFamily: \"Rubik\", background: \"#f44336\", }}\n                 onClick={() => setOpenSelfexcludeModal(!openSelfexcludeModal)}>Self-exclude</Button>\n                <SelfExcludeModal handleClose={() => setOpenSelfexcludeModal(!openSelfexcludeModal)} open={openSelfexcludeModal} />\n              </Box>\n              </Box>\n            </Box>\n            <Grid className={classes.grid} container>\n              <Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <VideogameAssetIcon /> LEVEL\n                </Box>\n                <h1>\n                <span\n                 open={open}\n                 style={{ cursor: \"pointer\", }}\n                 onClick={() => setOpenVip(!openVip)}\n                 onClose={() => setAnchorEl(null)}\n                >\n                  {user.wager < 500 ? <span className=\"nonenav\"> 🛡️ GAMBLER</span>\n                    : (user.wager >= 26000 ? <span className=\"diamondnav\"> 💎 DIAMOND</span>\n                    : (user.wager >= 9000 ? <span className=\"goldnav\"> 🥇 GOLD</span>\n                    : (user.wager >= 2100 ? <span className=\"silvernav\"> 🥈 SILVER</span>\n                    : <span className=\"bronzenav\"> 🥉 BRONZE</span>\n                  )))}\n                  </span>\n                </h1>\n              </Box>\n              <Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <VideogameAssetIcon /> PROFIT\n                </Box>\n                <h1>\n                  {loading ? (\n                    <Skeleton animation=\"wave\" height={40} width={150} />\n                  ) : (\n                    `$${parseCommasToThousands(cutDecimalPoints(((profile.totalDeposited-profile.totalWithdrawn-user.wallet)*(-1)).toFixed(7)))}`\n                  )}\n                </h1>\n              </Box>\n              <Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <VideogameAssetIcon /> TOTAL DEPOSITED\n                </Box>\n                <h1>\n                  {loading ? (\n                    <Skeleton animation=\"wave\" height={40} width={150} />\n                  ) : (\n                    `$${parseCommasToThousands(profile.totalDeposited)}`\n                  )}\n                </h1>\n              </Box>\n              <Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <VideogameAssetIcon /> TOTAL WITHDRAWN\n                </Box>\n                <h1>\n                  {loading ? (\n                    <Skeleton animation=\"wave\" height={40} width={150} />\n                  ) : (\n                    `$${parseCommasToThousands(profile.totalWithdrawn)}`\n                  )}\n                </h1>\n              </Box>\n              <Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <VideogameAssetIcon /> WAGERED\n                </Box>\n                <h1>\n                  {loading ? (\n                    <Skeleton animation=\"wave\" height={40} width={150} />\n                  ) : (\n                    `$${parseCommasToThousands(profile.wager)}`\n                  )}\n                </h1>\n              </Box>\n            </Grid>\n            <h1>💲 TRANSACTIONS</h1>\n            <Box className={classes.tran}>\n              {loading ? (\n                <LoadingTable />\n              ) : profile.transactions.length >= 1 ? (\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>ID</TableCell>\n                      <TableCell>AMOUNT IN $</TableCell>\n                      <TableCell>REASON</TableCell>\n                      <TableCell>EXTRA</TableCell>\n                      <TableCell>TIME</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {profile.transactions.map(transaction => (\n                      <TableRow key={transaction._id}>\n                        <TableCell>{transaction._id}</TableCell>                       \n                        <TableCell>${parseFloat(transaction.amount).toFixed(2)}</TableCell>\n                        <TableCell>{transaction.reason}</TableCell>\n                        <TableCell>NO EXTRA DATA</TableCell>\n                        <TableCell>{parseDate(transaction.created)}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              ) : (\n                <div className={classes.noTransactions}>NO TRANSACTIONS</div>\n              )}\n            </Box>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <div className={classes.logoutt} style={{ marginBottom: \"180px\", }}>\n            <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"sign-in-alt\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-inline--fa fa-sign-in-alt fa-w-16 fa-9x\" style={{ width: \"20px\", marginRight: \"10px\", marginTop: \"10px\", }}><path fill=\"currentColor\" d=\"M416 448h-84c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h84c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32h-84c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h84c53 0 96 43 96 96v192c0 53-43 96-96 96zm-47-201L201 79c-15-15-41-4.5-41 17v96H24c-13.3 0-24 10.7-24 24v96c0 13.3 10.7 24 24 24h136v96c0 21.5 26 32 41 17l168-168c9.3-9.4 9.3-24.6 0-34z\" class=\"\"></path></svg>             \n            <Button\n            style={{ marginTop: \"-15px\", }}\n                    className={classes.bet}\n                    size=\"medium\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => logout()}\n                  >\n                    <span className={classes.reverse}>LOGOUT</span>\n          </Button>\n            </div>\n          </Box>\n        </Container>\n      </Box>\n    </div>\n  );\n};\n\nconst LoadingTable = () => {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>ID</TableCell>\n          <TableCell>Time</TableCell>\n          <TableCell>Status</TableCell>\n          <TableCell>Action</TableCell>\n          <TableCell>Amount</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Array(3)\n          .fill()\n          .map((element, index) => (\n            <TableLoader key={index} />\n          ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nconst TableLoader = () => {\n  return (\n    <TableRow>\n      <TableCell>\n        <Skeleton animation=\"wave\" height={25} width={250} />\n      </TableCell>\n      <TableCell>\n        <Skeleton animation=\"wave\" height={25} width={50} />\n      </TableCell>\n      <TableCell>\n        <Skeleton animation=\"wave\" height={25} width={50} />\n      </TableCell>\n      <TableCell>\n        <Skeleton animation=\"wave\" height={25} width={100} />\n      </TableCell>\n      <TableCell>\n        <Skeleton animation=\"wave\" height={25} width={50} />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nProfile.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  user: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.isLoading,\n  user: state.auth.user,\n  logout: PropTypes.func.isRequired,\n});\n\nexport default connect(mapStateToProps, { logout })(Profile);\n",
    "/mnt/e/all_the_files_crypto/source_original/fortunebets-xyz-master/client/src/components/MobileNav.jsx",
    [
        "371",
        "372",
        "373",
        "374",
        "375"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Crash.jsx",
    [],
    [
        "376",
        "377"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/App.js",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Affiliates.jsx",
    [],
    [
        "378",
        "379"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/index.js",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Cups.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/serviceWorker.js",
    [],
    [
        "380",
        "381"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/Footer.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/Navbar.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Profile.jsx",
    [
        "382"
    ],
    "import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { getUserProfileData } from \"../services/api.service\";\nimport parseCommasToThousands from \"../utils/parseCommasToThousands\";\nimport cutDecimalPoints from \"../utils/cutDecimalPoints\";\nimport { logout } from \"../actions/auth\";\n\n// MUI Components\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Button from \"@material-ui/core/Button\";\n//import Tooltip from \"@material-ui/core/Tooltip\";\n\nimport SelfExcludeModal from \"../components/modals/SelfExcludeModal\";\n\n//import Dialog from \"@material-ui/core/Dialog\";\n//import DialogActions from \"@material-ui/core/DialogActions\";\n//import DialogContent from \"@material-ui/core/DialogContent\";\n//import DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Vip from \"../components/modals/VIPModal\";\n\n// Icons\nimport VideogameAssetIcon from \"@material-ui/icons/VideogameAsset\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\n\n// Components\nimport AccountVerificationModal from \"../components/modals/AccountVerificationModal\";\n\nimport { chatSocket } from \"../services/websocket.service\";\n\n// Custom styles\nconst useStyles = makeStyles(theme => ({\n  profile: {\n    margin: \"5rem 0\",\n    color: \"#e0e0e0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"2rem 0\",\n    },\n    \"& > h1\": {\n      color: \"#e4e4e4\",\n      fontFamily: \"Rubik\",\n      fontSize: \"20px\",\n      fontWeight: 500,\n      letterSpacing: \".1em\",\n      margin: 0,\n      marginBottom: \"1rem\",\n    },\n  },\n  userWrap: {\n    display: \"flex\",\n    background: \"#272b2f\",\n    boxShadow: \"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\",\n    borderRadius: \"0.25rem\",\n    padding: \"2rem\",\n  },\n  user: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > h1\": {\n      margin: 0,\n      color: \"#e0e0e0\",\n      fontFamily: \"Rubik\",\n      fontSize: \"16px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n    },\n    \"& > h5\": {\n      margin: 0,\n      textTransform: \"uppercase\",\n      color: \"#9d9d9d\",\n      fontFamily: \"Rubik\",\n      fontSize: \"13px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n    },\n  },\n  buttontest: {\n    color: \"#e4e4e4\",\n    fontFamily: \"Rubik\",\n    fontSize: \"13px\",\n    fontWeight: 500,\n    letterSpacing: \".1em\",\n  },\n  pfp: {\n    height: \"70px\",\n    width: \"70px\",\n    borderRadius: \"100%\",\n    boxShadow: \"2px 2px 10px 1px #1b1c1c\",\n  },\n  logoutt: {\n    textAlign: \"center\",\n  },\n  bet: {\n    minWidth: \"fit-content\",\n    textAlign: \"center\",\n    backgroundColor: \"#f44336\",\n    borderColor: \"#f44336\",\n    boxShadow: \"0 1.5px #191e24\",\n    color: \"white\",\n    textTransform: \"capitalize\",\n    \"&:hover\": {\n      backgroundColor: \"#f44336\",\n    },\n  },\n  grid: {\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-between\",\n    margin: \"1rem 0 2rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      flexWrap: \"wrap\",\n      flexDirection: \"column\",\n    },\n    \"& > div\": {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      background: \"#272b2f\",\n      boxShadow: \"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\",\n      width: \"19%\",\n      height: \"7rem\",\n      padding: \"0 2rem\",\n      borderRadius: \"0.25rem\",\n      color: \"#9d9d9d\",\n      fontFamily: \"Rubik\",\n      fontSize: \"13px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"100%\",\n        marginBottom: 10,\n      },\n      \"& svg\": {\n        marginRight: \"0.25rem\",\n        color: \"#2196f3\",\n      },\n      \"& h1\": {\n        margin: 0,\n        color: \"#e0e0e0\",\n        fontFamily: \"Rubik\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        letterSpacing: \".05em\",\n      },\n    },\n  },\n  tran: {\n    background: \"#272b2f\",\n    borderRadius: \"6px\",\n    padding: \"2rem\",\n    paddingTop: \"1rem\",\n    maxHeight: \"23rem\",\n    overflowY: \"auto\",\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: \"1rem\",\n    },\n    \"& th\": {\n      borderBottom: \"none\",\n      color: \"#4caf50\",\n      fontFamily: \"Rubik\",\n      fontSize: \"14px\",\n      fontWeight: 500,\n      letterSpacing: \".1em\",\n      textTransform: \"uppercase\",\n      paddingLeft: 0,\n    },\n    \"& td\": {\n      borderBottom: \"3px #272b2f solid\",\n      background: \"#212529\",\n      color: \"#9d9d9d\",\n      fontFamily: \"Rubik\",\n      fontSize: \"13px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n      paddingLeft: 0,\n      // textShadow: \"0px 0px 20px\",\n      \"&:nth-child(1)\": {\n        paddingLeft: \"1rem\",\n      },\n      \"&:nth-child(n+1):nth-child(-n+3)\": {\n        color: \"#9d9d9d\",\n        fontFamily: \"Rubik\",\n        fontSize: \"13px\",\n        fontWeight: 500,\n        letterSpacing: \".05em\",\n      },\n    },\n  },\n  notVerified: {\n    background: \"#272b2f\",\n    boxShadow: \"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\",\n    color: \"#e0e0e0\",\n    fontFamily: \"Rubik\",\n    fontSize: \"14px\",\n    fontWeight: 500,\n    letterSpacing: \".05em\",\n    padding: \"1rem 2rem\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    marginBottom: \"1rem\",\n    borderRadius: \"0.25rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: \"1rem\",\n    },\n    \"& > div\": {\n      margin: \"0 auto 0 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    \"& svg\": {\n      marginRight: \"1rem\",\n      color: \"#2196f3\",\n    },\n  },\n  verifyBtn: {\n    backgroundColor: \"#273a4f\",\n    borderColor: \"#273a4f\",\n    color: \"#e0e0e0\",\n    fontFamily: \"Rubik\",\n    fontSize: \"13px\",\n    fontWeight: 500,\n    letterSpacing: \".1em\",\n    padding: \"0.3rem 2rem\",\n    textTransform: \"capitalize\",\n    marginLeft: \"1rem\",\n    \"&:hover\": {\n      backgroundColor: \"#273a4f\",\n    },\n  },\n  reverse: {\n    fontFamily: \"Rubik\",\n  },\n  nonenav: {\n    color: \"#d5d6d8\",\n    fontSize: \"11px\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    textTransform: \"uppercase\",\n  },\n  bronzenav: {\n    color: \"#C27C0E\",\n    fontSize: \"11px\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    textTransform: \"uppercase\",\n  },\n  silvernav: {\n    color: \"#95A5A6\",\n    fontSize: \"11px\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    textTransform: \"uppercase\",\n  },\n  goldnav: {\n    color: \"#b99309\",\n    fontSize: \"11px\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    textTransform: \"uppercase\",\n  },\n  diamondnav: {\n    color: \"#3498DB\",\n    fontSize: \"11px\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    textTransform: \"uppercase\",\n  },\n  progressbox: {\n    position: \"relative\",\n    \"& > div > .MuiOutlinedInput-root\": {\n      background: \"#212529\",\n      \"& > input\": {\n        color: \"#cccc\",\n        fontFamily: \"Rubik\",\n        marginRight: \"100px\",\n        fontSize: \"14px\",\n      },\n    },\n    \"& > div\": {\n      width: \"100%\",\n      \"& label\": {\n        color: \"#ff9800\",\n        fontFamily: \"Rubik\",\n        fontSize: \"14px\",\n        fontWeight: 500,\n        letterSpacing: \".1em\",\n      },\n      \"& label.Mui-focused\": {\n        color: \"#ff9800\",\n      },\n      \"& .MuiInput-underline:after\": {\n        borderBottomColor: \"#1b1c1c\",\n      },\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: \"#1b1c1c\",\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#1b1c1c\",\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"#1b1c1c\",\n        },\n      },\n    },\n    \"& > button\": {\n      position: \"absolute\",\n      right: 10,\n      top: 10,\n      width: \"7rem\",\n      background: \"#264d68\",\n      color: \"#e4e4e4\",\n      \"&:hover\": {\n        background: \"#264d68\",\n      },\n      \"& .MuiButton-label\": {\n      },\n    },\n    \"& > img\": {\n      position: \"absolute\",\n      top: -10,\n      zIndex: 1000,\n    },\n  },\n  loader: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"36rem\",\n  },\n  noTransactions: {\n    width: \"100%\",\n    textAlign: \"center\",\n    padding: \"2rem 0 1rem 0\",\n    color: \"#9d9d9d\",\n    fontFamily: \"Rubik\",\n    fontSize: \"14px\",\n    fontWeight: 500,\n    letterSpacing: \".1em\",\n  },\n  verifybutton: {\n    color: \"#5f6368\",\n  },\n}));\n\n// Custom Component\nconst ColorCircularProgress = withStyles({\n  root: {\n    color: \"#4f79fd\",\n  },\n})(CircularProgress);\n\nconst Profile = ({ isLoading, isAuthenticated, user, logout }) => {\n  // Declare State\n  const classes = useStyles();\n  const [openSelfexcludeModal, setOpenSelfexcludeModal] = useState(false);\n  const [displayname, setDisplayname] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [profile, setProfile] = useState(null);\n  const [openVip, setOpenVip] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const open = Boolean(anchorEl);\n\n  // Get profile data from API\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const data = await getUserProfileData();\n\n      // Update state\n      setProfile(data);\n      setDisplayname(user.username);\n      setLoading(false);\n    } catch (error) {\n      console.log(\"There was an error while loading user profile data:\", error);\n    }\n  };\n\n  // Get verbal month from js month index\n  const getMonthFromIndex = index => {\n    switch (index) {\n      default:\n      case 0:\n        return \"JAN\";\n      case 1:\n        return \"FEB\";\n      case 2:\n        return \"MAR\";\n      case 3:\n        return \"APR\";\n      case 4:\n        return \"MAY\";\n      case 5:\n        return \"JUN\";\n      case 6:\n        return \"JUL\";\n      case 7:\n        return \"AUG\";\n      case 8:\n        return \"SEP\";\n      case 9:\n        return \"OCT\";\n      case 10:\n        return \"NOV\";\n      case 11:\n        return \"DEC\";\n    }\n  };\n\n  // Parse unix timestamp to readable format\n  const parseDate = timestamp => {\n    const d = new Date(timestamp);\n    return `${getMonthFromIndex(\n      d.getMonth()\n    )} ${d.getDate()}, ${d.getFullYear()}, ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n  };\n\n  // Open verification modal\n  const onClick = () => {\n    setModalVisible(state => !state);\n  };\n\n  // Set display name through chat socket\n  const changeDisplayname = () => {\n    chatSocket.emit(\"set-displayname\", displayname);\n  }\n\n  // Input onChange event handler\n  const onChangeDisplayname = e => {\n    setDisplayname(e.target.value);\n  };\n\n  // componentDidMount\n  useEffect(() => {\n    if (!isLoading && isAuthenticated) fetchData();\n  }, [isLoading, isAuthenticated]);\n\n  // If user is not logged in\n  if (!isLoading && !isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return isLoading || !user ? (\n    <Box className={classes.loader}>\n      <ColorCircularProgress />\n    </Box>\n  ) : (\n    <Box>\n      <AccountVerificationModal\n        open={modalVisible}\n        handleClose={() => setModalVisible(state => !state)}\n      />\n      <Vip handleClose={() => setOpenVip(!openVip)} open={openVip} />\n      <Box>\n        <Container maxWidth=\"lg\">\n          <Box className={classes.profile}>\n            {!loading && !profile.hasVerifiedAccount && (\n              <Box className={classes.notVerified}>\n                <div>\n                  <SecurityIcon />\n                  <p>\n                    We need additional information to verify your account. After\n                    verification you can claim your free $0.5!\n                  </p>\n                </div>\n                <Button\n                  className={classes.verifyBtn}\n                  size=\"medium\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={onClick}\n                >\n                  <span className={classes.reverse}>VERIFY NOW</span>\n                </Button>\n              </Box>\n            )}\n            <h1>🔎 PROFILE</h1>\n            <Box className={classes.userWrap}>\n              <Box className={classes.user}>\n                <Avatar\n                  className={classes.pfp}\n                  src={user.avatar}\n                  variant=\"rounded\"\n                />\n                <h5 style={{ textTransform: \"none\", color: \"#ff9800\", marginTop: \"23px\", marginBottom: \"2px\", marginLeft: \"2px\", }}>USERNAME:</h5>\n                <Box position=\"relative\" className={classes.progressbox} style={{ marginBottom: \"20px\", }}>\n                  <TextField\n                    name=\"name\"\n                    className=\"input\"\n                    variant=\"outlined\"\n                    inputProps={{ maxLength: 16 }}\n                    placeholder=\"#USERNAME\"\n                    onChange={onChangeDisplayname}\n                    value={displayname}\n                  />\n                  <Button\n                    onClick={changeDisplayname}\n                    className={classes.buttontest}\n                    variant=\"contained\"\n                    style={{ fontFamily: \"Rubik\", background: \"#009688\", }}\n                  >CHANGE</Button>\n                </Box>\n                <h5 style={{ textTransform: \"none\", color: \"#5a5a5a\", }}>UID: <span style={{ color: \"#4CAF50\", }}>{user._id}</span></h5>\n                <h5>Registered {parseDate(user.created)}</h5>\n                <br />\n                <Box>\n                  <Button\n                    className={classes.buttontest}\n                    variant=\"contained\"\n                    style={{ fontFamily: \"Rubik\", background: \"#f44336\", }}\n                    onClick={() => setOpenSelfexcludeModal(!openSelfexcludeModal)}>Self-exclude</Button>\n                  <SelfExcludeModal handleClose={() => setOpenSelfexcludeModal(!openSelfexcludeModal)} open={openSelfexcludeModal} />\n                </Box>\n              </Box>\n            </Box>\n            <Grid className={classes.grid} container>\n              <Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <VideogameAssetIcon /> LEVEL\n                </Box>\n                <h1>\n                  <span\n                    open={open}\n                    style={{ cursor: \"pointer\", }}\n                    onClick={() => setOpenVip(!openVip)}\n                    onClose={() => setAnchorEl(null)}\n                  >\n                    {user.wager < 500 ? <span className=\"nonenav\"> 🛡️ GAMBLER</span>\n                      : (user.wager >= 26000 ? <span className=\"diamondnav\"> 💎 DIAMOND</span>\n                        : (user.wager >= 9000 ? <span className=\"goldnav\"> 🥇 GOLD</span>\n                          : (user.wager >= 2100 ? <span className=\"silvernav\"> 🥈 SILVER</span>\n                            : <span className=\"bronzenav\"> 🥉 BRONZE</span>\n                          )))}\n                  </span>\n                </h1>\n              </Box>\n              <Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <VideogameAssetIcon /> PROFIT\n                </Box>\n                <h1>\n                  {loading ? (\n                    <Skeleton animation=\"wave\" height={40} width={150} />\n                  ) : (\n                    `$${parseCommasToThousands(cutDecimalPoints(((profile.totalDeposited - profile.totalWithdrawn - user.wallet) * (-1)).toFixed(7)))}`\n                  )}\n                </h1>\n              </Box>\n              <Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <VideogameAssetIcon /> TOTAL DEPOSITED\n                </Box>\n                <h1>\n                  {loading ? (\n                    <Skeleton animation=\"wave\" height={40} width={150} />\n                  ) : (\n                    `$${parseCommasToThousands(profile.totalDeposited)}`\n                  )}\n                </h1>\n              </Box>\n              <Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <VideogameAssetIcon /> TOTAL WITHDRAWN\n                </Box>\n                <h1>\n                  {loading ? (\n                    <Skeleton animation=\"wave\" height={40} width={150} />\n                  ) : (\n                    `$${parseCommasToThousands(profile.totalWithdrawn)}`\n                  )}\n                </h1>\n              </Box>\n              <Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <VideogameAssetIcon /> WAGERED\n                </Box>\n                <h1>\n                  {loading ? (\n                    <Skeleton animation=\"wave\" height={40} width={150} />\n                  ) : (\n                    `$${parseCommasToThousands(profile.wager)}`\n                  )}\n                </h1>\n              </Box>\n            </Grid>\n            <h1>💲 TRANSACTIONS</h1>\n            <Box className={classes.tran}>\n              {loading ? (\n                <LoadingTable />\n              ) : profile.transactions.length >= 1 ? (\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>ID</TableCell>\n                      <TableCell>AMOUNT IN $</TableCell>\n                      <TableCell>REASON</TableCell>\n                      <TableCell>EXTRA</TableCell>\n                      <TableCell>TIME</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {profile.transactions.map(transaction => (\n                      <TableRow key={transaction._id}>\n                        <TableCell>{transaction._id}</TableCell>\n                        <TableCell>${parseFloat(transaction.amount).toFixed(2)}</TableCell>\n                        <TableCell>{transaction.reason}</TableCell>\n                        <TableCell>NO EXTRA DATA</TableCell>\n                        <TableCell>{parseDate(transaction.created)}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              ) : (\n                <div className={classes.noTransactions}>NO TRANSACTIONS</div>\n              )}\n            </Box>\n            <br />\n            <br />\n            <br />\n            <br />\n            <div className={classes.logoutt} style={{ marginBottom: \"180px\", }}>\n              <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"sign-in-alt\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"svg-inline--fa fa-sign-in-alt fa-w-16 fa-9x\" style={{ width: \"20px\", marginRight: \"10px\", marginTop: \"10px\", }}><path fill=\"currentColor\" d=\"M416 448h-84c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h84c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32h-84c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h84c53 0 96 43 96 96v192c0 53-43 96-96 96zm-47-201L201 79c-15-15-41-4.5-41 17v96H24c-13.3 0-24 10.7-24 24v96c0 13.3 10.7 24 24 24h136v96c0 21.5 26 32 41 17l168-168c9.3-9.4 9.3-24.6 0-34z\" className=\"\"></path></svg>\n              <Button\n                style={{ marginTop: \"-15px\", }}\n                className={classes.bet}\n                size=\"medium\"\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => logout()}\n              >\n                <span className={classes.reverse}>LOGOUT</span>\n              </Button>\n            </div>\n          </Box>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nconst LoadingTable = () => {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>ID</TableCell>\n          <TableCell>Time</TableCell>\n          <TableCell>Status</TableCell>\n          <TableCell>Action</TableCell>\n          <TableCell>Amount</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Array(3)\n          .fill()\n          .map((element, index) => (\n            <TableLoader key={index} />\n          ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nconst TableLoader = () => {\n  return (\n    <TableRow>\n      <TableCell>\n        <Skeleton animation=\"wave\" height={25} width={250} />\n      </TableCell>\n      <TableCell>\n        <Skeleton animation=\"wave\" height={25} width={50} />\n      </TableCell>\n      <TableCell>\n        <Skeleton animation=\"wave\" height={25} width={50} />\n      </TableCell>\n      <TableCell>\n        <Skeleton animation=\"wave\" height={25} width={100} />\n      </TableCell>\n      <TableCell>\n        <Skeleton animation=\"wave\" height={25} width={50} />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nProfile.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  user: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.isLoading,\n  user: state.auth.user,\n  logout: PropTypes.func.isRequired,\n});\n\nexport default connect(mapStateToProps, { logout })(Profile);\n",
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Fair.jsx",
    [],
    [
        "383",
        "384"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Roulette.jsx",
    [
        "385"
    ],
    "import React, { useState, useEffect, Fragment } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { getRouletteSchema } from \"../services/api.service\";\nimport { rouletteSocket } from \"../services/websocket.service\";\nimport Spritesheet from \"react-responsive-spritesheet\";\nimport Countdown from \"react-countdown\";\nimport PropTypes from \"prop-types\";\n\n// MUI Components\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Slider from 'react-input-slider';\nimport TimerIcon from '@material-ui/icons/Timer';\n\nimport { TimerBar } from \"./TimerBarR.js\";\n\n// Components\nimport Bets from \"../components/roulette/Bets\";\nimport Wheel from \"../components/roulette/Wheel\";\nimport HistoryEntry from \"../components/roulette/HistoryEntry\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\n\n// Assets\n//import timer from \"../assets/timer.png\";\nimport ani2Cup from \"../assets/2xAni.png\";\nimport ani3Cup from \"../assets/3xAni.png\";\nimport ani4Cup from \"../assets/4xAni.png\";\n\nimport placebet from \"../assets/placebet.wav\";\nimport error from \"../assets/error.wav\";\n\nconst errorAudio = new Audio(error);\nconst placebetAudio = new Audio(placebet);\n\nconst playSound = audioFile => {\n  audioFile.play();\n};\n\n\n\n//import fakeBets from \"../libs/fakeBets\"\n\nconst TILE_COUNT = 54;\n\n// Custom Styled Component\nconst BetInput = withStyles({\n  root: {\n    marginTop: \"auto\",\n    marginRight: 10,\n    \"& :before\": {\n      display: \"none\",\n    },\n    \"& label\": {\n      color: \"#323956\",\n      fontSize: 15,\n    },\n    \"& div input\": {\n      color: \"#e4e4e4\",\n      fontFamily: \"Rubik\",\n      fontSize: \"14px\",\n      fontWeight: 500,\n      letterSpacing: \".1em\",\n      padding: \"0rem 0rem\",\n    },\n    \"& div\": {\n      // background: \"#171A28\",\n      background: \"#32363c\",\n      height: \"2.25rem\",\n      borderRadius: 4,\n    },\n  },\n})(TextField);\n\n// Custom Styled Component\nconst Arrow = withStyles({\n  root: {\n    width: 0,\n    height: 0,\n    borderLeft: \"10px solid transparent\",\n    borderRight: \"10px solid transparent\",\n    borderTop: \"30px solid #e0e0e0\",\n    position: \"absolute\",\n    top: \"1.5rem\",\n    zIndex: 1000,\n    transition: \"0.25s ease\",\n    opacity: props => props.opacity,\n  },\n})(Box);\n\n// Custom Styled Component\nconst Prize = withStyles({\n  root: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    zIndex: 1100,\n    textShadow: \"0px 0px 20px black\",\n    margin: \"auto\",\n    fontFamily: \"Rubik\",\n    fontSize: \"45px\",\n    fontWeight: 500,\n    letterSpacing: \".05em\",\n    color: \"#e0e0e0\", //gold\n    opacity: props => props.opacity,\n    transition: \"0.25s ease\",\n  },\n})(Box);\n\n// Custom Styled Component\n//const TimerBar = withStyles({\n//  root: {\n//    height: \"0.4rem\",\n//  },\n// colorPrimary: {\n//    backgroundColor: \"#212529\",\n//  },\n//  barColorPrimary: {\n//   backgroundColor: \"#439646\",\n//  },\n//})(LinearProgress);\n\n// Custom Styles\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      paddingTop: 25,\n      marginBottom: 150,\n    },\n    \"& > div > div\": {\n      justifyContent: \"space-around\",\n    },\n  },\n  box: {\n    marginBottom: 5,\n  },\n  logo: {\n    color: \"#e4e4e4\",\n    fontFamily: \"Rubik\",\n    fontSize: \"19px\",\n    fontWeight: 500,\n    letterSpacing: \".1em\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 15,\n      marginTop: 5,\n    },\n  },\n  countdown: {\n    fontSize: 20,\n    marginBottom: \"20px\",\n    marginLeft: \"5px\",\n    marginTop: \"-35px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 15,\n      marginBottom: \"20px\",\n      marginLeft: \"5px\",\n      marginTop: \"0px\",\n    },\n  },\n  controls: {\n    overflow: \"visible\",\n    background: \"#212529\",\n    marginBottom: \"34px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"20px\",\n      marginTop: \"-25px\",\n    },\n  },\n  right: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    height: \"2.25rem\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    marginRight: \"-28px\",\n    marginTop: \"25px\",\n    maxWidth: \"56rem\",\n    maskImage: \"linear-gradient(240deg,rgba(0,0,0,1) 34%,rgba(0,0,0,0))\",\n    overflow: \"hidden\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginRight: \"-21px\",\n    },\n  },\n  game: {\n    display: \"flex\",\n    width: \"56%\",\n    height: \"75vh\",\n    maxHeight: \"800px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      maxHeight: \"500px\",\n    },\n  },\n  bets: {\n    display: \"flex\",\n    width: \"43%\",\n    height: \"75vh\",\n    maxHeight: \"800px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n    },\n  },\n  info: {\n    width: \"100%\",\n    display: \"flex\",\n    height: \"4rem\",\n    background: \"#272b2f\",\n    boxShadow: \"0 1.5px #191e24\",\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#e4e4e4\",\n    fontFamily: \"Rubik\",\n    fontSize: \"13px\",\n    fontWeight: 500,\n    letterSpacing: \".05em\",\n  },\n  wheel: {\n    maxHeight: \"470px\",\n    padding: \"1rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n    margin: \"auto\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    background: \"repeating-linear-gradient(45deg,transparent,transparent 10px,rgba(0,0,0,.08) 0,rgba(0,0,0,.08) 20px)\",\n    border: \"2px solid #282c33\",\n    boxShadow: \"0 1.5px #191e24\",\n    marginTop: 5,\n    borderRadius: 5,\n    transition: \"1s ease\",\n    maskImage: \"linear-gradient(180deg,rgba(0,0,0,1) 88%,rgba(0,0,0,0) 98%)\",\n    [theme.breakpoints.down(\"xs\")]: {\n      maxHeight: \"270px\",\n    },\n  },\n  disabled: {\n    opacity: 0.25,\n    transition: \"0.25s ease\",\n    pointerEvents: \"none\",\n    cursor: \"not-allowed\",\n  },\n  regular: {\n    opacity: 1,\n    transition: \"0.25s ease\",\n    pointerEvents: \"all\",\n    cursor: \"pointer\",\n  },\n  inputIcon: {\n    marginTop: \"0 !important\",\n    color: \"#4fa0d8\",\n    background: \"transparent !important\",\n  },\n  placeBet: {\n    background: \"#272b2f\",\n    boxShadow: \"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\",\n    borderRadius: 5,\n    \"& > div\": {\n      //transform: 'perspective(250px) rotateX(20deg) scale(0.85)',\n    },\n    \"& > div > div\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:nth-child(1)\": {\n        \"& button:nth-child(1)\": {\n          background: \"#4e789e\",\n          marginRight: \"15px\",\n          fontFamily: \"Rubik\",\n          fontSize: \"33px\",\n          fontWeight: 500,\n          justifyContent: \"flex-start\",\n          letterSpacing: \".1em\",\n          [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"13px\",\n            justifyContent: \"center\",\n          },\n        },\n        \"& button:nth-child(2)\": {\n          background: \"#41b444\",\n          marginRight: \"15px\",\n          fontFamily: \"Rubik\",\n          fontSize: \"33px\",\n          fontWeight: 500,\n          justifyContent: \"flex-start\",\n          letterSpacing: \".1em\",\n          [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"13px\",\n            justifyContent: \"center\",\n          },\n        },\n        \"& button:nth-child(3)\": {\n          background: \"#a960b3\",\n          fontFamily: \"Rubik\",\n          marginRight: \"15px\",\n          fontSize: \"33px\",\n          fontWeight: 500,\n          justifyContent: \"flex-start\",\n          letterSpacing: \".1em\",\n          [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"13px\",\n            justifyContent: \"center\",\n          },\n        },\n        \"& button:nth-child(4)\": {\n          background: \"#cbaa1f\",\n          fontFamily: \"Rubik\",\n          fontSize: \"33px\",\n          fontWeight: 500,\n          justifyContent: \"flex-start\",\n          letterSpacing: \".1em\",\n          [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"13px\",\n            justifyContent: \"center\",\n          },\n        },\n      },\n      \"&:nth-child(2)\": {\n        \"& button:nth-child(1)\": {\n          background: \"#a960b3\",\n          marginRight: \"15px\",\n          fontFamily: \"Rubik\",\n          fontSize: \"33px\",\n          fontWeight: 500,\n          justifyContent: \"flex-start\",\n          letterSpacing: \".1em\",\n          [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"13px\",\n            justifyContent: \"center\",\n          },\n        },\n        \"& button:nth-child(2)\": {\n          background: \"#cbaa1f\",\n          marginRight: \"15px\",\n          fontFamily: \"Rubik\",\n          fontSize: \"33px\",\n          fontWeight: 500,\n          justifyContent: \"flex-start\",\n          letterSpacing: \".1em\",\n          [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"13px\",\n            justifyContent: \"center\",\n          },\n        },\n        \"& button:nth-child(3)\": {\n          background: \"#cbaa1f\",\n          fontFamily: \"Rubik\",\n          fontSize: \"33px\",\n          fontWeight: 500,\n          justifyContent: \"flex-start\",\n          letterSpacing: \".1em\",\n          [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"13px\",\n            justifyContent: \"center\",\n          },\n        },\n      },\n    },\n    \"& button\": {\n      width: \"30.5%\",\n      color: \"#e4e4e4\",\n      fontFamily: \"Rubik\",\n      fontSize: \"14px\",\n      fontWeight: 500,\n      letterSpacing: \".1em\",\n      \"&:hover\": {\n        opacity: 1,\n      },\n    },\n    animation: {\n      [theme.breakpoints.down(\"xs\")]: {\n        \"& > img\": {\n          width: \"75%\",\n        },\n        \"& .react-responsive-spritesheet\": {\n          transform: \"scale(0.2)\",\n        },\n      },\n      [theme.breakpoints.up(\"sm\")]: {\n        \"& > img\": {\n          width: \"75%\",\n        },\n        \"& .react-responsive-spritesheet\": {\n          transform: \"scale(0.6)\",\n        },\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        \"& > img\": {\n          width: \"75%\",\n        },\n        \"& .react-responsive-spritesheet\": {\n          transform: \"scale(0.85)\",\n        },\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        \"& > img\": {\n          width: \"75%\",\n        },\n        \"& .react-responsive-spritesheet\": {\n          transform: \"scale(1)\",\n        },\n      },\n    },\n  },\n  contain: {\n    [theme.breakpoints.down(\"xs\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  multiplier: {\n    // backgroundColor: \"#181B2B\",\n    // borderColor: \"#181B2B\",\n    minWidth: \"fit-content\",\n    backgroundColor: \"#32363c\",\n    borderColor: \"#32363c\",\n    color: \"white\",\n    marginRight: 7,\n    marginTop: \"0.5rem\",\n  },\n  slidertest: {\n    marginTop: \"12px\",\n    marginRight: \"20px\",\n    marginLeft: \"10px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  playerCont: {\n    display: \"flex\",\n    width: \"95%\",\n    alignItems: \"center\",\n    marginLeft: \"3px\",\n    padding: \"1rem 1rem\",\n  },\n  hashvalue: {\n    color: \"#e0e0e0\",\n    fontFamily: \"Rubik\",\n    fontSize: \"12px\",\n    marginTop: \"1.5rem\",\n    marginLeft: \"30px\",\n    fontWeight: 500,\n    letterSpacing: \".05em\",\n  },\n  reverse: {\n  },\n  create: {\n    backgroundColor: \"#f44336\",\n    borderColor: \"#f44336\",\n    marginRight: 7,\n    color: \"white\",\n    marginTop: \"0.5rem\",\n    textTransform: \"capitalize\",\n    \"&:hover\": {\n      backgroundColor: \"#f44336\",\n    },\n  },\n  betButtons: {\n    padding: \"1rem 1rem\",\n    \"& button\": {\n      height: \"4rem\",\n      marginBottom: 10,\n    },\n  },\n  extra: {\n    position: \"absolute\",\n    top: -37,\n    right: 7,\n    color: \"white\",\n  },\n  barContainer: {\n    position: \"relative\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: \"1rem\",\n    },\n  },\n  bar: {\n    position: \"absolute\",\n    width: \"100%\",\n    top: 0,\n    left: 0,\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: \"-8px\",\n    },\n  },\n}));\n\n\n// Renderer callback with condition\nconst rendererR = ({ minutes, seconds, completed }) => {\n  if (completed) {\n    // Render a completed state\n    return \"ROLLING\";\n  } else {\n    // Render a countdown\n    return ` ${minutes}:${seconds < 10 ? \"0\" + seconds : seconds}`;\n  }\n};\n\n// Same game states as in backend\nconst GAME_STATES = {\n  NotStarted: \"Loading...\",\n  InProgress: \"Rolling\",\n};\n\nconst RESET_DEG = -3; // What is the reseted wheel rotation degrees\n\nconst Roulette = ({ user }) => {\n  // Declare State\n  const classes = useStyles();\n  const { addToast } = useToasts();\n\n  const [gameState, setGameState] = useState(\"Loading...\");\n\n  const [loading, setLoading] = useState(true);\n  const [wheelAnimationDuration, setWheelAnimationDuration] = useState(10);\n  const [joining, setJoining] = useState(false);\n  const [buttonsDisabled, setButtonsDisabled] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [waitTime, setWaitTime] = useState(5000);\n  const [color, setColor] = useState(\"blue\");\n  const [betAmount, setBetAmount] = useState(\"0.00\");\n  const [gameId, setGameId] = useState(null);\n  const [privateHash, setPrivateHash] = useState(null);\n\n  // Preloading animations\n  const [animations, setAnimations] = useState({});\n\n  const [showExtraMultiplier, setShowExtraMultiplier] = useState(false);\n  const [extraMultiplier, setExtraMultiplier] = useState(null);\n  const [rotation, setRotation] = useState(RESET_DEG);\n\n  // Fetch roulette schema from API\n  const fetchData = async () => {\n    setLoading(true);\n    setButtonsDisabled(true);\n    try {\n      const schema = await getRouletteSchema();\n\n      // Update state\n      setGameId(schema.current._id);\n      setPrivateHash(schema.current.privateHash);\n      setPlayers(schema.current.players);\n      setWaitTime(Date.now() + schema.current.timeLeft);\n      setHistory(schema.history.reverse());\n      setLoading(false);\n      if (schema.current.timeLeft > 0) {\n        setGameState(\"PLACE YOUR BETS\");\n      }\n      setButtonsDisabled(false);\n      if (schema.current.rollStatus) {\n        gameRolled(schema.current.rollStatus.winningIndex, schema.current.rollStatus.winningMultiplier, schema.current.rollStart);\n      }\n    } catch (error) {\n      console.log(\"There was an error while loading roulette schema:\", error);\n    }\n  };\n\n  // Game has rolled, show animation\n  const gameRolled = (index, multiplier, start) => {\n    // Update state\n    setWheelAnimationDuration(10 + (start || 0) / 1000);\n    //setGameState(\"Rolling\");\n    setGameState(GAME_STATES.InProgress);\n    setButtonsDisabled(true);\n    //playSound(rollAudio);\n\n    // Calculate degrees\n    const degrees = getWheelRotation(index);\n\n    // Set wheel positions\n    setRotation(-Math.abs(degrees + 360));\n\n    // Wait for the animation (not to test for 0)\n    if (multiplier !== undefined) {\n      setTimeout(() => {\n        setGameState(\n          `ROLLED ${multiplier === 0\n            ? \"MYSTERY! GETTING MULTIPLIER...\"\n            : multiplier + \"x\"\n          }`\n        );\n      }, 10000);\n    }\n  };\n\n  // Add new player to the current game\n  const addNewPlayer = player => {\n    setPlayers(state => [...state, player]);\n  };\n\n  // Button onClick event handler\n  const onClick = () => {\n    setJoining(true);\n    setButtonsDisabled(true);\n\n    // Emit new bet event\n    rouletteSocket.emit(\"join-game\", color, parseFloat(betAmount));\n  };\n\n  // TextField onChange event handler\n  const onChange = e => {\n    setBetAmount(e.target.value);\n  };\n\n  // Translate color name to HEX code\n  const getColorCode = name => {\n    switch (name) {\n      default:\n      case \"blue\":\n        return \"#458DBF\";\n      case \"green\":\n        return \"#2ebd50\";\n      case \"purple\":\n        return \"#b157ce\";\n      case \"yellow\":\n        return \"#cbaa1f\";\n    }\n  };\n\n  // New round started event handler\n  const newRoundStarted = (countdownTime, gameId, privateHash) => {\n    // Update state\n    setGameId(gameId);\n    setPrivateHash(privateHash);\n    setWaitTime(Date.now() + countdownTime);\n    setGameState(\"PLACE YOUR BETS\");\n    setRotation(RESET_DEG);\n    setButtonsDisabled(false);\n    //setJoining(false);\n    setShowExtraMultiplier(false);\n    setExtraMultiplier(null);\n    setPlayers([]);\n  };\n\n  // Get rotation for the wheel\n  const getWheelRotation = index => {\n    // const offset = Math.random();\n    const offsetDeg = 3; // (offset * 360) / TILE_COUNT\n    return (index * 360) / TILE_COUNT + offsetDeg;\n  };\n\n  // Multiplier rolled (extra tiles)\n  const multiplierRolled = multiplier => {\n    // Update state\n    setExtraMultiplier(`extra-${multiplier}`);\n    setShowExtraMultiplier(true);\n    setGameState(`Mystery multiplier ${multiplier}x`);\n  };\n\n  // Normal round rolled\n  const roundRolled = multiplier => {\n    // Update state\n    setExtraMultiplier(multiplier);\n    setShowExtraMultiplier(true);\n  };\n\n  // Add game to history\n  const addGameToHistory = game => {\n    setHistory(state =>\n      state.length >= 50\n        ? [...state.slice(1, state.length), game]\n        : [...state, game]\n    );\n  };\n\n  // componentDidMount\n  useEffect(() => {\n    // Error event handler\n    const joinError = msg => {\n      setButtonsDisabled(false);\n      setJoining(false);\n      addToast(msg, { appearance: \"error\" });\n      playSound(errorAudio);\n    };\n\n    // Success event handler\n    const joinSuccess = () => {\n      setButtonsDisabled(false);\n      setJoining(false);\n      //addToast(\"Successfully joined the game!\", { appearance: \"success\" });\n      playSound(placebetAudio);\n    };\n\n    // Game has rolled, show animation\n    const specialGameRolled = (index, multiplier) => {\n      // Update state\n      //setGameState(\"Rolling\");\n      setGameState(GAME_STATES.InProgress);\n      setShowExtraMultiplier(false);\n      setButtonsDisabled(true);\n\n      // Calculate degrees\n      const degrees = getWheelRotation(index);\n\n      // Set wheel positions\n      setRotation(state => {\n        // If user missed first roll\n        if (state === RESET_DEG) {\n          return -Math.abs(degrees + 360);\n        } else {\n          const previousDegrees = Math.abs(state) - 360;\n          const toStart = -Math.abs(360 - previousDegrees);\n          const resetAmount = state + toStart;\n\n          return resetAmount - (degrees + 360);\n        }\n      });\n    };\n\n    // Initially, fetch data\n    fetchData();\n\n    // Preload animations\n    setAnimations({ twoX: ani2Cup, threeX: ani3Cup, fourX: ani4Cup });\n\n    // Listeners\n    rouletteSocket.on(\"new-player\", addNewPlayer);\n    rouletteSocket.on(\"game-join-error\", joinError);\n    rouletteSocket.on(\"game-join-success\", joinSuccess);\n    rouletteSocket.on(\"new-round\", newRoundStarted);\n    rouletteSocket.on(\"game-rolled\", gameRolled);\n    rouletteSocket.on(\"special-game-rolled\", specialGameRolled);\n    rouletteSocket.on(\"multiplier-rolled\", roundRolled);\n    rouletteSocket.on(\"additional-multiplier-rolled\", multiplierRolled);\n    rouletteSocket.on(\"add-game-to-history\", addGameToHistory);\n\n    return () => {\n      // Remove Listeners\n      rouletteSocket.off(\"new-player\", addNewPlayer);\n      rouletteSocket.off(\"game-join-error\", joinError);\n      rouletteSocket.off(\"game-join-success\", joinSuccess);\n      rouletteSocket.off(\"new-round\", newRoundStarted);\n      rouletteSocket.off(\"game-rolled\", gameRolled);\n      rouletteSocket.off(\"special-game-rolled\", specialGameRolled);\n      rouletteSocket.off(\"multiplier-rolled\", roundRolled);\n      rouletteSocket.off(\"additional-multiplier-rolled\", multiplierRolled);\n      rouletteSocket.off(\"add-game-to-history\", addGameToHistory);\n    };\n  }, [addToast]);\n\n  return (\n    <Box className={classes.barContainer}>\n      <Box className={classes.root}>\n        <Container maxWidth=\"lg\">\n          <Box className={classes.logo}>\n            <Toolbar variant=\"dense\" className={classes.controls}>\n              <Box className={classes.logo}>\n                <div className={classes.bar}>\n                  {!loading && gameState === \"PLACE YOUR BETS\" && <TimerBar waitTime={waitTime} gameStates={GAME_STATES} updateGameState={(state) => setGameState(state)} />}\n                </div>\n              </Box>\n              <Box className={classes.right}>\n                {history.map(game => (\n                  <HistoryEntry key={game._id} game={game} />\n                ))}\n              </Box>\n            </Toolbar>\n            <Box className={classes.countdown} alignItems=\"center\" display=\"flex\">\n              <TimerIcon style={{ display: \"flex\", marginRight: 5, fontSize: 25, color: \"#439646\", }} />\n              {loading ? (\n                <Fragment>{gameState}</Fragment>\n              ) : gameState === GAME_STATES.InProgress ? (\n                <Fragment>ROLLING</Fragment>\n              ) : (\n                <Fragment>\n                  <Countdown key={waitTime} date={waitTime} renderer={rendererR} />\n                </Fragment>\n              )}\n            </Box>\n          </Box>\n          <Grid container className={classes.contain}>\n            <Box className={classes.game} flexDirection=\"column\">\n              <Box className={classes.info}>\n                {loading ? (\n                  <Tooltip\n                    interactive\n                    title={\n                      <span>\n                        Round ID: {gameId}\n                        <br />\n                        Private Hash: {privateHash}\n                      </span>\n                    }\n                    placement=\"top\"\n                  >\n                    <span style={{ cursor: \"pointer\", }}>⚖️ PROVABLY FAIR</span>\n                  </Tooltip>\n                ) : (\n                  <Tooltip\n                    interactive\n                    title={\n                      <span>\n                        Round ID: {gameId}\n                        <br />\n                        Private Hash: {privateHash}\n                      </span>\n                    }\n                    placement=\"top\"\n                  >\n                    <span style={{ cursor: \"pointer\", }}>⚖️ PROVABLY FAIR</span>\n                  </Tooltip>\n                )}\n              </Box>\n              <Box className={classes.wheel}>\n                <Prize opacity={showExtraMultiplier ? 1 : 0}>\n                  {extraMultiplier === \"extra-2\" ? (\n                    <Spritesheet\n                      image={animations.twoX}\n                      timeout={0}\n                      autoplay={true}\n                      widthFrame={690}\n                      heightFrame={412}\n                      steps={180}\n                      fps={60}\n                      className={classes.animation}\n                      style={{ position: \"absolute\", zIndex: 100 }}\n                    />\n                  ) : extraMultiplier === \"extra-3\" ? (\n                    <Spritesheet\n                      image={animations.threeX}\n                      timeout={0}\n                      autoplay={true}\n                      widthFrame={690}\n                      heightFrame={412}\n                      steps={180}\n                      fps={60}\n                      className={classes.animation}\n                      style={{ position: \"absolute\", zIndex: 100 }}\n                    />\n                  ) : extraMultiplier === \"extra-4\" ? (\n                    <Spritesheet\n                      image={animations.fourX}\n                      timeout={0}\n                      autoplay={true}\n                      widthFrame={690}\n                      heightFrame={412}\n                      steps={180}\n                      fps={60}\n                      className={classes.animation}\n                      style={{ position: \"absolute\", zIndex: 100 }}\n                    />\n                  ) : extraMultiplier ? (\n                    String(extraMultiplier).includes(\"extra-\") ? (\n                      String(extraMultiplier).replace(\"extra-\", \"\") + \"x\"\n                    ) : (\n                      extraMultiplier + \"x\"\n                    )\n                  ) : null}\n                </Prize>\n                <Arrow opacity={showExtraMultiplier ? 0.5 : 1} />\n                {gameState === \"Rolling\" ? (\n                  <Wheel\n                    rotate={`rotate(${rotation}deg)`}\n                    opacity={showExtraMultiplier ? 0.5 : 1}\n                    transition={`transform ${wheelAnimationDuration}s ease`}\n                  />\n                ) : (\n                  <Wheel\n                    opacity={showExtraMultiplier ? 0.5 : 1}\n                    rotate={`rotate(${rotation}deg)`}\n                    transition=\"none\"\n                  />\n                )}\n              </Box>\n              <Box className={classes.placeBet}>\n                <Box className={classes.playerCont}>\n                  <BetInput\n                    label=\"\"\n                    variant=\"filled\"\n                    value={betAmount}\n                    onChange={onChange}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment\n                          className={classes.inputIcon}\n                          position=\"start\"\n                        >\n                          <AttachMoneyIcon style={{ fontSize: 16 }} />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                  <Slider\n                    className={classes.slidertest}\n                    styles={{\n                      track: {\n                        backgroundColor: '#707479'\n                      },\n                      active: {\n                        backgroundColor: getColorCode(color),\n                        borderRadius: \"4px\",\n                      },\n                    }}\n                    axis=\"x\"\n                    xstep={0.1}\n                    xmin={0}\n                    xmax={200}\n                    x={betAmount}\n                    onChange={({ x }) => setBetAmount(parseFloat(x.toFixed(0)) + \".00\")}\n                  />\n                  <Button\n                    className={classes.create}\n                    size=\"medium\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    disabled={joining}\n                    onClick={onClick}\n                    style={{ backgroundColor: getColorCode(color) }}\n                  >\n                    <span className={classes.reverse}>\n                      {joining ? \"BETTING...\" : \"BET\"}\n                    </span>\n                  </Button>\n                </Box>\n                <Box className={classes.betButtons}>\n                  <Box\n                    className={\n                      buttonsDisabled ? classes.disabled : classes.regular\n                    }\n                  >\n                    <Button\n                      variant=\"contained\"\n                      disabled={buttonsDisabled}\n                      onClick={() => { setColor(\"blue\"); }}\n                    >\n                      {extraMultiplier &&\n                        String(extraMultiplier).includes(\"extra-\") ? (\n                        <h1 className={classes.extra}>\n                          {String(extraMultiplier).replace(\"extra-\", \"\")}x\n                        </h1>\n                      ) : null}\n                      2x\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      disabled={buttonsDisabled}\n                      onClick={() => { setColor(\"green\"); }}\n                    >\n                      {extraMultiplier &&\n                        String(extraMultiplier).includes(\"extra-\") ? (\n                        <h1 className={classes.extra}>\n                          {String(extraMultiplier).replace(\"extra-\", \"\")}x\n                        </h1>\n                      ) : null}\n                      3x\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      disabled={buttonsDisabled}\n                      onClick={() => { setColor(\"purple\"); }}\n                    >\n                      {extraMultiplier &&\n                        String(extraMultiplier).includes(\"extra-\") ? (\n                        <h1 className={classes.extra}>\n                          {String(extraMultiplier).replace(\"extra-\", \"\")}x\n                        </h1>\n                      ) : null}\n                      5x\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      disabled={buttonsDisabled}\n                      onClick={() => { setColor(\"yellow\"); }}\n                    >\n                      {extraMultiplier &&\n                        String(extraMultiplier).includes(\"extra-\") ? (\n                        <h1 className={classes.extra}>\n                          {String(extraMultiplier).replace(\"extra-\", \"\")}x\n                        </h1>\n                      ) : null}\n                      20x\n                    </Button>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n            <Bets players={players} loading={loading} />\n          </Grid>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nRoulette.propTypes = {\n  user: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Roulette);\n",
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/services/api.service.js",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/History_Error.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/MobileNav.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/RaceHistory.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Registration.jsx",
    [],
    [
        "386",
        "387"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/Preloader.js",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/Result.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/roulette/Bets.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/cups/Game.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/cups/PlayAmount.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/Waiting.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/controls/Color.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/CupsGames.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/cups/GameList.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/chat/Header.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/FreeModal.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/reducers/auth.js",
    [
        "388"
    ],
    "import {\n  USER_LOADED,\n  RELOADING_USER,\n  WALLET_CHANGE,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\nimport cutDecimalPoints from \"../utils/cutDecimalPoints\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: true,\n  user: null,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: payload.user,\n      };\n    case RELOADING_USER:\n      return {\n        ...state,\n        isAuthenticated: false,\n        isLoading: true,\n        // user: null\n      };\n    case WALLET_CHANGE:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          wallet:\n            state.user.wallet + payload < 0\n              ? 0\n              : parseFloat(cutDecimalPoints(state.user.wallet + payload)),\n          wager:\n            payload < 0\n              ? state.user.wager + Math.abs(payload)\n              : state.user.wager,\n        },\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        isLoading: true,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n};\n",
    [
        "389",
        "390"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/controls/Players.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/utils/parseCommasToThousands.js",
    [],
    [
        "391",
        "392"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/chat/Controls.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/chat/Messages.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/chat/ModeratedMessage.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/CouponModal.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/DepositModal.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/crash/Cup.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/TipModal.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/deposit/Skins.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/Chose.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/PrevGame.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/History.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Race.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/Jackpot.jsx",
    [
        "393"
    ],
    "import React, { useState, useEffect, Fragment } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Spritesheet from \"react-responsive-spritesheet\";\nimport Countdown from \"react-countdown\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { jackpotSocket } from \"../services/websocket.service\";\nimport { getJackpotSchema } from \"../services/api.service\";\nimport { useToasts } from \"react-toast-notifications\";\n\n// MUI Components\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\nimport Slider from 'react-input-slider';\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport HistoryIcon from '@material-ui/icons/History';\nimport { NavLink as Link } from \"react-router-dom\";\n\n// Components\nimport Chose from \"../components/jackpot/Chose\";\nimport PrevGame from \"../components/jackpot/PrevGame\";\nimport Explode from \"../components/jackpot/Explode\";\n\n// Assets\nimport cupOutline from \"../assets/cup-outline.png\";\nimport red from \"../assets/jackpot/red.png\";\nimport blue from \"../assets/jackpot/blue.png\";\nimport green from \"../assets/jackpot/green.png\";\nimport yellow from \"../assets/jackpot/yellow.png\";\nimport pink from \"../assets/jackpot/pink.png\";\nimport aniJackpot from \"../assets/anifortunebets.png\";\nimport jackpotPause from \"../assets/jackpot.png\";\n\nimport ballRed from \"../assets/jackpot/ballRed.png\";\nimport ballBlue from \"../assets/jackpot/ballBlue.png\";\nimport ballGreen from \"../assets/jackpot/ballGreen.png\";\nimport ballYellow from \"../assets/jackpot/ballYellow.png\";\nimport ballPink from \"../assets/jackpot/ballPink.png\";\nimport ballNull from \"../assets/jackpot/ballNull.png\";\n\nimport error from \"../assets/error.wav\";\nimport success from \"../assets/success.wav\";\nimport jackpot from \"../assets/jackpotstarted.wav\";\n//import wave from \"../assets/cupswave.wav\";\n\nconst errorAudio = new Audio(error);\nconst successAudio = new Audio(success);\nconst jackpotstartedAudio = new Audio(jackpot);\n//const waveAudio = new Audio(wave);\n\nconst playSound = audioFile => {\n  audioFile.play();\n};\n\n// import fakeBets from \"../libs/fakeBets\";\n\n// Custom Styled Component\nconst BetInput = withStyles({\n  root: {\n    width: \"10rem\",\n    marginTop: \"auto\",\n    marginRight: \"1rem\",\n    marginBottom: \"5px\",\n    \"& :before\": {\n      display: \"none\",\n    },\n    \"& label\": {\n      color: \"#323956\",\n      fontSize: 15,\n    },\n    \"& div input\": {\n      color: \"#e4e4e4\",\n      fontFamily: \"Rubik\",\n      fontSize: \"14px\",\n      fontWeight: 500,\n      letterSpacing: \".1em\",\n      padding: \"0.5rem 1rem\",\n    },\n    \"& div\": {\n      background: \"#32363c\",\n      height: \"2.25rem\",\n      borderRadius: 4,\n    },\n  },\n})(TextField);\n\n// Custom styles\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    paddingTop: 30,\n    paddingBottom: 100,\n    [theme.breakpoints.down(\"xs\")]: {\n      paddingTop: 27,\n      paddingBottom: \"160px\",\n    },\n    \"& > div > div\": {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-around\",\n      \"& > hr\": {\n        width: \"100%\",\n        marginTop: \"1rem\",\n        background: \"#32363c\",\n        borderColor: \"#32363c\",\n      },\n    },\n  },\n  box: {\n    marginBottom: 5,\n  },\n  logo: {\n    color: \"#e4e4e4\",\n    fontFamily: \"Rubik\",\n    fontSize: \"19px\",\n    fontWeight: 500,\n    letterSpacing: \".1em\",\n  },\n  controls: {\n    background: \"#212529\",\n    //padding: \"1rem 3rem\",\n    paddingTop: \"1.5rem\",\n    marginBottom: \"-20px\",\n    marginTop: \"-30px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: \"0rem 0rem\",\n      //marginLeft: 20,\n      display: \"block\",\n      marginBottom: \"80px\",\n      //marginTop: \"20px\",\n      paddingTop: \"2rem\",\n    },\n  },\n  right: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    height: \"2.25rem\",\n    marginRight: \"-24px\",\n    background: \"#32363c\",\n    borderRadius: \"4px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"inherit\",\n      marginRight: \"-2px\",\n      background: \"#32363c00\",\n    },\n  },\n  game: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"#272b2f\",\n    boxShadow: \"0 1.5px #191e24\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    height: \"60px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      \"& > div\": {\n      },\n    },\n    \"& > img\": {\n      marginLeft: \"2rem\",\n      [theme.breakpoints.down(\"xs\")]: {\n        display: \"none\",\n      },\n    },\n  },\n  animation: {\n    display: \"flex\",\n    background: \"#272b2f\",\n    boxShadow: \"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    height: \"36vh\",\n    marginTop: 5,\n    overflow: \"hidden\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    [theme.breakpoints.down(\"xs\")]: {\n      \"& > img\": {\n        width: \"75%\",\n      },\n      \"& .react-responsive-spritesheet\": {\n        transform: \"scale(0.3)\",\n      },\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      \"& > img\": {\n        width: \"75%\",\n      },\n      \"& .react-responsive-spritesheet\": {\n        transform: \"scale(0.6)\",\n      },\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      \"& > img\": {\n        width: \"75%\",\n      },\n      \"& .react-responsive-spritesheet\": {\n        transform: \"scale(0.85)\",\n      },\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      \"& > img\": {\n        width: \"75%\",\n      },\n      \"& .react-responsive-spritesheet\": {\n        transform: \"scale(1)\",\n      },\n    },\n  },\n  bets: {\n    display: \"grid\",\n    alignItems: \"space-between\",\n    gridColumnGap: 15,\n    gridTemplateColumns: \"auto auto auto auto auto\",\n    width: \"100%\",\n    height: \"17vh\",\n    marginTop: 10,\n    [theme.breakpoints.down(\"xs\")]: {\n      gridTemplateColumns: \"auto auto\",\n      gridRowGap: 15,\n      height: \"fit-content\",\n    },\n    \"& > div\": {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      background: \"#272b2f\",\n      boxShadow: \"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\",\n      borderRadius: 5,\n      \"& h5, h3\": {\n        margin: 0,\n        fontWeight: \"500\",\n        color: \"#e4e4e4\",\n        fontFamily: \"Rubik\",\n        fontSize: \"12px\",\n        letterSpacing: \".05em\",\n      },\n      \"& h3\": {\n        marginTop: 10,\n        color: \"#e4e4e4\",\n        fontFamily: \"Rubik\",\n        fontSize: \"12px\",\n        fontWeight: 500,\n        letterSpacing: \".05em\",\n      },\n      \"& span\": {\n        color: \"#4fa0d8\",\n      },\n      \"& hr\": {\n        width: \"75%\",\n        opacity: 0.1,\n        margin: \"1rem 0\",\n      },\n      \"& .betLeft\": {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"80%\",\n        color: \"white\",\n        [theme.breakpoints.down(\"xs\")]: {\n          padding: \"20px 15px\",\n        },\n      },\n      \"& .betRight\": {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        background: \"#32363c\",\n        width: \"40%\",\n        height: \"100%\",\n        fontSize: 10,\n        borderTopRightRadius: 5,\n        borderBottomRightRadius: 5,\n        [theme.breakpoints.down(\"xs\")]: {\n          background: \"transparent\",\n        },\n      },\n    },\n  },\n  players: {\n    display: \"grid\",\n    alignItems: \"space-between\",\n    gridColumnGap: 10,\n    gridRowGap: 10,\n    gridTemplateColumns: \"auto auto auto auto\",\n    width: \"100%\",\n    minHeight: \"8vh\",\n    //marginTop: 15,\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"unset\",\n      gridTemplateColumns: \"auto auto\",\n      gridRowGap: 10,\n    },\n  },\n  smallBet: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"left\",\n    width: \"100%\",\n    height: 70,\n    background: \"#272b2f\",\n    boxShadow: \"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)\",\n    borderRadius: 5,\n    paddingLeft: \"1rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: 9,\n      paddingLeft: 12,\n      marginBottom: 10,\n    },\n    \"& h3, h5\": {\n      margin: 0,\n      color: \"#e4e4e4\",\n      fontFamily: \"Rubik\",\n      fontSize: \"12px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n    },\n    \"& span\": {\n      color: \"#4fa0d8\",\n    },\n  },\n  potValue: {\n    color: \"white\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: \"1.3rem\",\n    \"& img\": {\n      marginRight: \"1rem\",\n    },\n    \"& h5, h3\": {\n      margin: 0,\n      color: \"#e4e4e4\",\n      fontFamily: \"Rubik\",\n      fontSize: \"12px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n    },\n    \"& h5\": {\n      color: \"#4caf50\",\n      fontFamily: \"Rubik\",\n      fontSize: \"12px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n    },\n    \"& h3\": {\n      color: \"#e4e4e4\",\n      fontFamily: \"Rubik\",\n      fontSize: \"20px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n      [theme.breakpoints.down(\"sm\")]: {\n        color: \"#e4e4e4\",\n        fontFamily: \"Rubik\",\n        fontSize: \"15px\",\n        fontWeight: 500,\n        letterSpacing: \".05em\",\n      },\n    },\n  },\n  betInfo: {\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginLeft: \"1rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 8,\n      color: \"#e4e4e4\",\n      fontFamily: \"Rubik\",\n      fontSize: \"12px\",\n      fontWeight: 500,\n      letterSpacing: \".05em\",\n    },\n    \"& h3\": {\n      margin: 0,\n      [theme.breakpoints.down(\"xs\")]: {\n        color: \"#e4e4e4\",\n        fontFamily: \"Rubik\",\n        fontSize: \"11px\",\n        fontWeight: 500,\n        letterSpacing: \".05em\",\n      },\n    },\n  },\n  inputIcon: {\n    marginTop: \"0 !important\",\n    color: \"#4fa0d8\",\n    background: \"transparent !important\",\n  },\n  userlevel: {\n    background: \"#31363c\",\n    fontSize: 10,\n    padding: \"5px 10px\",\n    color: \"#9d9d9d\",\n    fontFamily: \"Rubik\",\n    fontWeight: 500,\n    letterSpacing: \".15em\",\n    marginTop: \"-4px\",\n    borderTopLeftRadius: \"3px\",\n    borderBottomLeftRadius: \"3px\",\n    borderRight: \"1px solid #272b2f\",\n  },\n  hashvalue: {\n    color: \"#5f6368\",\n    fontFamily: \"Rubik\",\n    fontSize: \"15px\",\n    marginTop: \"1.5rem\",\n    marginLeft: \"30px\",\n    cursor: \"pointer\",\n    fontWeight: 500,\n    letterSpacing: \".05em\",\n  },\n  avatar2: {\n    borderRadius: \"100%\",\n  },\n  outline: {\n    marginLeft: \"auto\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    height: \"100%\",\n    width: \"30%\",\n    borderBottomRightRadius: \"5px\",\n    borderTopRightRadius: \"5px\",\n    background: \"#23272b\",\n    [theme.breakpoints.down(\"xs\")]: {\n      background: \"transparent\",\n      width: \"20%\",\n    },\n  },\n  multiplier: {\n    backgroundColor: \"#32363c\",\n    borderColor: \"#32363c\",\n    boxShadow: \"0px 0px 0px 0px #32363c\",\n    color: \"white\",\n    marginRight: 10,\n    \"&:hover\": {\n      backgroundColor: \"#32363c\",\n    },\n  },\n  reverse: {\n    fontFamily: \"Rubik\",\n  },\n  create: {\n    backgroundColor: \"#3386c9\",\n    borderColor: \"#3386c9\",\n    boxShadow: \"0px 0px 0px 0px #32363c\",\n    color: \"#ffffff\",\n    fontFamily: \"Rubik\",\n    fontSize: \"12px\",\n    fontWeight: 500,\n    padding: \"0 2rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: \"0.5rem\",\n    },\n    textTransform: \"capitalize\",\n    \"&:hover\": {\n      backgroundColor: \"#3386c9\",\n    },\n  },\n  round: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n    \"& > img\": {\n      width: 30,\n      height: 30,\n      marginLeft: 20,\n    },\n  },\n  nonActive: {\n    opacity: 0.35,\n    transition: \"0.25s ease\",\n  },\n  activeRound: {\n    transform: \"scale(1.05)\",\n    opacity: 1,\n    transition: \"0.25s ease\",\n  },\n  aniJackpot: {\n    width: 952,\n    height: 206,\n    position: \"relative\",\n    top: 0,\n    transition: \"0.25s ease\",\n  },\n  slidertest: {\n    marginTop: \"12px\",\n    marginRight: \"15px\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginRight: \"34%\",\n    },\n  },\n  ballWrap: {\n    width: 952,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  ballBox: {\n    width: 952,\n    height: 206,\n    position: \"relative\",\n    top: 0,\n    transition: \"0.25s ease\",\n    [theme.breakpoints.down(\"xs\")]: {\n      transform: \"scale(0.3)\",\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      transform: \"scale(0.6)\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      transform: \"scale(0.85)\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      transform: \"scale(1)\",\n    },\n  },\n  ball: {\n    width: 982,\n    height: \"100%\",\n    position: \"relative\",\n  },\n  barContainer: {\n    position: \"relative\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: \"1rem\",\n    },\n  },\n  bar: {\n    position: \"absolute\",\n    width: \"100%\",\n    top: 0,\n    left: 0,\n  },\n}));\n\n// Custom Component\nconst ColorCircularProgress = withStyles({\n  root: {\n    color: \"#4f79fd\",\n  },\n})(CircularProgress);\n\n// Custom Styled Component\nconst TimerBar = withStyles({\n  root: {\n    height: \"0.4rem\",\n  },\n  colorPrimary: {\n    backgroundColor: \"#272b2f\",\n    borderRadius: \"20px\",\n    height: \"7px\",\n  },\n  barColorPrimary: {\n    backgroundColor: \"#439646\",\n  },\n})(LinearProgress);\n\n// Renderer callback with condition\nconst renderer = ({ total, minutes, seconds, completed }) => {\n  return (\n    <TimerBar\n      variant=\"determinate\"\n      value={total / 19000 * 100}\n    />\n  );\n};\n\nconst Jackpot = ({ user }) => {\n  // Declare State\n  const classes = useStyles();\n  const { addToast } = useToasts();\n\n  const [loading, setLoading] = useState(true);\n  const [joining, setJoining] = useState(false);\n  const [betAmount, setBetAmount] = useState(\"0.00\");\n\n  const [prevGames, setPrevGames] = useState([]);\n  const [waitTime, setWaitTime] = useState(5000);\n  const [gameStatus, setGameStatus] = useState(0);\n  const [finalCountdown, setFinalCountdown] = useState(0);\n  const [currentlyPicking, setCurrentlyPicking] = useState(0);\n  const [players, setPlayers] = useState([]);\n  const [nextRoundPlayers, setNextRoundPlayers] = useState(null);\n  const [wheelImages, setWheelImages] = useState([]);\n  const [transform, setTransform] = useState(\"translateX(0px)\");\n  const [animation, setAnimation] = useState(\"3s ease\");\n  const [winner, setWinner] = useState(null);\n  const [move, setMove] = useState(0);\n  const [opacity, setOpacity] = useState(0);\n  const [top, setTop] = useState(0);\n  const [gameId, setGameId] = useState(null);\n  const [privateHash, setPrivateHash] = useState(null);\n\n  // Fetch jackpot schema from API\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const schema = await getJackpotSchema();\n\n      console.log(\"Schema:\", schema);\n\n      // Get current game status\n      const currentStatus = schema.current.status;\n\n      // If current game is on countdown\n      if (currentStatus === 2) {\n        setWaitTime(Date.now() + schema.current.timeLeft);\n      } else if (currentStatus === 3) {\n        // If current game is picking players\n        setCurrentlyPicking(schema.current.currentlyPicking);\n      } else if (currentStatus === 4) {\n        // If current game is rolling\n        console.log(\"Jackpot game rolling...\");\n      }\n\n      // Update state\n      setGameId(schema.current._id);\n      setPrivateHash(schema.current.privateHash);\n      setPlayers(schema.current.players);\n      setNextRoundPlayers(schema.current.nextRoundPlayers);\n      setGameStatus(currentStatus);\n      setLoading(false);\n      setPrevGames(schema.history);\n    } catch (error) {\n      console.log(\"There was an error while loading roulette schema:\", error);\n    }\n  };\n\n  // TextField onChange event handler\n  const onChange = e => {\n    // Update state\n    setBetAmount(e.target.value);\n  };\n\n  // Button onClick event handler\n  const onClick = () => {\n    setJoining(true);\n    jackpotSocket.emit(\"join-game\", parseFloat(betAmount));\n  };\n\n  // New round has started\n  const newRound = (gameId, privateHash) => {\n    // Update state\n    fetchData();\n    setGameId(gameId);\n    setPrivateHash(privateHash);\n    setGameStatus(1);\n    setCurrentlyPicking(0);\n    setPlayers([]);\n    setNextRoundPlayers(null);\n  };\n\n  // Add player to the game\n  const addPlayer = player => {\n    // Update state\n    setPlayers(state => [...state, player]);\n  };\n\n  // Player's percentages updated\n  const percentagesUpdated = players => {\n    // Update state\n    setPlayers(players);\n  };\n\n  // Server is picking a cup\n  const pickingCup = cupId => {\n    // Update state\n    setGameStatus(3);\n    setCurrentlyPicking(cupId);\n  };\n\n  // Get cup color from cupId\n  const getCupColor = cupId => {\n    switch (cupId) {\n      default:\n      case 1:\n        return \"#ff4c4c\";\n      case 2:\n        return \"#4c7aff\";\n      case 3:\n        return \"#4cffa1\";\n      case 4:\n        return \"#efff4c\";\n      case 5:\n        return \"#e84cff\";\n    }\n  };\n\n  // Countdown started\n  const countdownStarted = time => {\n    // Update state\n    setGameStatus(2);\n    setWaitTime(Date.now() + time);\n  };\n\n  // Game is rolling\n  const rollingGame = () => {\n    // Update state\n    setCurrentlyPicking(0);\n  };\n\n  // Game rolled\n  const gameRolled = async (winner, winningCupIndex) => {\n    setCurrentlyPicking(0);\n\n    // Coundown stage commences\n    await new Promise(resolve => {\n      let secunde = 5;\n      setFinalCountdown(secunde);\n      let int = setInterval(() => {\n        secunde -= 1;\n        setFinalCountdown(secunde);\n        if (secunde <= 0) { clearInterval(int); setFinalCountdown(\"\"); resolve(); }\n      }, 1000);\n    });\n\n    // Update state\n    setGameStatus(4);\n    playSound(jackpotstartedAudio);\n\n    // Ball image selector\n    const winnerBall = [ballRed, ballBlue, ballGreen, ballYellow, ballPink];\n    const winnerNull = [ballNull];\n\n    // Wait for animation and set winner\n    setTimeout(() => setWinner(winnerBall[winningCupIndex]), 2400);\n    setTimeout(() => setCurrentlyPicking(winningCupIndex + 1), 3800);\n    setTimeout(() => setWinner(winnerNull[0]), 8000);\n  };\n\n  // Filter out next round players\n  const noNextRoundPlayers = player =>\n    ![\n      nextRoundPlayers && nextRoundPlayers.red && nextRoundPlayers.red._id,\n      nextRoundPlayers && nextRoundPlayers.blue && nextRoundPlayers.blue._id,\n      nextRoundPlayers && nextRoundPlayers.green && nextRoundPlayers.green._id,\n      nextRoundPlayers &&\n      nextRoundPlayers.yellow &&\n      nextRoundPlayers.yellow._id,\n      nextRoundPlayers && nextRoundPlayers.pink && nextRoundPlayers.pink._id,\n    ].includes(player._id);\n\n  // componentDidMount\n  useEffect(() => {\n    // Player picked for next round\n    const playerPicked = (winner, allPlayers, currentCup) => {\n      // Reset Animation\n      setAnimation(\"none\");\n      setTransform(\"translateX(0px)\");\n\n      // Get images for wheel\n      const images = allPlayers.map(player => ({\n        avatar: player.avatar,\n        _id: player._id,\n      }));\n      setWheelImages(images.map(item => item.avatar));\n\n      // Calculate animation\n      const tileWidth = 100;\n      const tileCount = images.length;\n      const repeatCount = 30;\n      const rowWidth = tileCount * tileWidth;\n      const winnerIndex = images.map(item => item._id).indexOf(winner._id);\n      const translateX =\n        (repeatCount / 3) * rowWidth +\n        (winnerIndex + 1) * tileWidth -\n        tileWidth / 2;\n\n      // Wait for animation reset\n      setTimeout(() => {\n        setTransform(`translateX(-${translateX}px)`);\n        setAnimation(\"2s ease\");\n      }, 1000);\n\n      // Wait for the animation\n      setTimeout(() => {\n        setNextRoundPlayers(state => ({ ...state, [currentCup]: winner }));\n      }, 1000);\n    };\n\n    // Game joining error handler\n    const handleError = msg => {\n      setJoining(false);\n      addToast(msg, { appearance: \"error\" });\n      playSound(errorAudio);\n    };\n\n    // Game joining success handler\n    const handleSuccess = msg => {\n      setJoining(false);\n      //addToast(\"Successfully joined the game!\", { appearance: \"success\" });\n      playSound(successAudio);\n    };\n\n    // Fetch data initially\n    fetchData();\n\n    // Listeners\n    jackpotSocket.on(\"game-join-error\", handleError);\n    jackpotSocket.on(\"game-join-success\", handleSuccess);\n    jackpotSocket.on(\"new-player\", addPlayer);\n    jackpotSocket.on(\"percentages-updated\", percentagesUpdated);\n    jackpotSocket.on(\"picking-cup\", pickingCup);\n    jackpotSocket.on(\"player-picked\", playerPicked);\n    jackpotSocket.on(\"countdown-started\", countdownStarted);\n    jackpotSocket.on(\"rolling-game\", rollingGame);\n    jackpotSocket.on(\"game-rolled\", gameRolled);\n    jackpotSocket.on(\"new-round\", newRound);\n\n    // componentDidUnmount\n    return () => {\n      // Remove Listeners\n      jackpotSocket.off(\"game-join-error\", handleError);\n      jackpotSocket.off(\"game-join-success\", handleSuccess);\n      jackpotSocket.off(\"new-player\", addPlayer);\n      jackpotSocket.off(\"percentages-updated\", percentagesUpdated);\n      jackpotSocket.off(\"picking-cup\", pickingCup);\n      jackpotSocket.off(\"player-picked\", playerPicked);\n      jackpotSocket.off(\"countdown-started\", countdownStarted);\n      jackpotSocket.off(\"rolling-game\", rollingGame);\n      jackpotSocket.off(\"game-rolled\", gameRolled);\n      jackpotSocket.off(\"new-round\", newRound);\n    };\n  }, [addToast]);\n\n  // Preload images\n  useEffect(() => {\n    const img = new Image();\n\n    // By setting src, we trigger browser download\n    img.src = aniJackpot;\n    img.src = ballRed;\n    img.src = ballBlue;\n    img.src = ballGreen;\n    img.src = ballYellow;\n    img.src = ballPink;\n  }, []);\n\n  return (\n    <Box className={classes.barContainer}>\n      <Box className={classes.root}>\n        <Container maxWidth=\"lg\">\n          <Box className={classes.logo}>\n            <Toolbar variant=\"dense\" className={classes.controls}>\n              <Box className={classes.logo}>\n                <div className={classes.bar}>\n                  {loading ? (\n                    null\n                  ) : gameStatus === 1 ? (\n                    <TimerBar variant=\"determinate\" value={0} />\n                  ) : (\n                    <Countdown\n                      date={waitTime}\n                      intervalDelay={0}\n                      precision={3}\n                      renderer={renderer}\n                    />\n                  )}\n                </div>\n              </Box>\n              <Box className={classes.right}>\n                <BetInput\n                  label=\"\"\n                  value={betAmount}\n                  onChange={onChange}\n                  variant=\"filled\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment\n                        className={classes.inputIcon}\n                        position=\"start\"\n                      >\n                        <AttachMoneyIcon style={{ fontSize: 16 }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                <Slider\n                  className={classes.slidertest}\n                  styles={{\n                    track: {\n                      backgroundColor: '#282c33'\n                    },\n                    active: {\n                      backgroundColor: '#707479'\n                    },\n                  }}\n                  axis=\"x\"\n                  xstep={0.1}\n                  xmin={0}\n                  xmax={500}\n                  x={betAmount}\n                  onChange={({ x }) => setBetAmount(parseFloat(x.toFixed(0)) + \".00\")}\n                />\n                <Button\n                  className={classes.multiplier}\n                  size=\"medium\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() =>\n                    setBetAmount(state => (parseFloat(state) / 2).toFixed(2))\n                  }\n                >\n                  <span className={classes.reverse}>1/2</span>\n                </Button>\n                <Button\n                  className={classes.multiplier}\n                  size=\"medium\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() =>\n                    setBetAmount(state => (parseFloat(state) * 2).toFixed(2))\n                  }\n                >\n                  <span className={classes.reverse}>2x</span>\n                </Button>\n                <Button\n                  className={classes.multiplier}\n                  size=\"medium\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => setBetAmount(user ? user.wallet : 0)}\n                >\n                  <span className={classes.reverse}>MAX</span>\n                </Button>\n                <Button\n                  className={classes.create}\n                  size=\"medium\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  disabled={joining}\n                  onClick={onClick}\n                >\n                  <span className={classes.reverse}>\n                    {joining ? \"JOINING...\" : \"JOIN\"}\n                  </span>\n                </Button>\n              </Box>\n            </Toolbar>\n            <Box>\n              <Link\n                style={{ textDecoration: \"none\", }}\n                exact\n                to=\"/history\"\n              >\n                <Button style={{ textDecoration: \"none\", }}>\n                  <HistoryIcon style={{ fontSize: \"1rem\", marginTop: \"-2px\", color: \"#273a4f\", marginRight: \"2px\", }} />\n                  <span style={{ textDecoration: \"none\", color: \"#52565c\", }} className={classes.reverse}>\n                    MY HISTORY\n                  </span>\n                </Button>\n              </Link>\n            </Box>\n          </Box>\n          <Grid container>\n            <Box className={classes.game}>\n              <Box className={classes.round}>\n                <Tooltip\n                  interactive\n                  title={\n                    <span>\n                      Round ID: {gameId}\n                      <br />\n                      Private Hash: {privateHash}\n                    </span>\n                  }\n                  placement=\"bottom\"\n                >\n                  <span>\n                    <p className={classes.hashvalue}><CasinoIcon /></p>\n                  </span>\n                </Tooltip>\n              </Box>\n              <Box display=\"flex\" marginLeft=\"auto\" style={{ overflow: \"auto\", paddingLeft: \"1rem\", }} >\n                {!loading && (\n                  <Fragment>\n                    <Box className={classes.potValue}>\n                      <Box>\n                        <h5>CHANCE</h5>\n                        <h3 style={{ color: \"#d94e43\", }}>\n                          {user\n                            ? players.find(player => player._id === user._id)\n                              ? `${players\n                                .find(player => player._id === user._id)\n                                .winningPercentage.toFixed(2)}%`\n                              : \"0.00%\"\n                            : \"0.00%\"}\n                        </h3>\n                      </Box>\n                    </Box>\n                    <Box className={classes.potValue}>\n                      <Box>\n                        <h5>MY BET</h5>\n                        <h3>\n                          {user\n                            ? players.find(player => player._id === user._id)\n                              ? `$${players\n                                .find(player => player._id === user._id)\n                                .betAmount.toFixed(2)}`\n                              : \"$0.00\"\n                            : \"$0.00\"}\n                        </h3>\n                      </Box>\n                    </Box>\n                    <Box className={classes.potValue}>\n                      <Box>\n                        <h5>TOTAL BETS</h5>\n                        <h3>\n                          {`$${players\n                            .map(player => player.betAmount)\n                            .reduce((a, b) => a + b, 0)\n                            .toFixed(2)}`}\n                        </h3>\n                      </Box>\n                    </Box>\n                  </Fragment>\n                )}\n              </Box>\n            </Box>\n            <Box className={classes.animation}>\n              {loading ? (\n                <Fragment>\n                  <ColorCircularProgress />\n                </Fragment>\n              ) : gameStatus < 3 ? (\n                <Fragment>\n                  <img src={jackpotPause} alt=\"paused\" />\n                </Fragment>\n              ) : gameStatus === 3 ? (\n                <Fragment>\n                  <Chose\n                    animation={animation}\n                    transform={transform}\n                    color={getCupColor(currentlyPicking)}\n                    images={wheelImages}\n                    repeat={30}\n                    finalCountdown={finalCountdown}\n                  />\n                  <Explode color={getCupColor(currentlyPicking)} />\n                </Fragment>\n              ) : gameStatus === 4 ? (\n                <Fragment>\n                  <Spritesheet\n                    image={aniJackpot}\n                    widthFrame={476 * 2}\n                    heightFrame={206}\n                    steps={120}\n                    fps={60}\n                    style={{ top: move }}\n                    className={classes.anifortunebets}\n                    onEnterFrame={[\n                      {\n                        frame: 119,\n                        callback: () => {\n                          setMove(\"-3rem\");\n                          setTop(\"3rem\");\n                          setOpacity(1);\n                        },\n                      },\n                    ]}\n                  />\n                  <Box className={classes.ballWrap}>\n                    <Box className={classes.ballBox}>\n                      <Box\n                        className={classes.ball}\n                        style={{\n                          top: top,\n                          opacity: opacity,\n                          backgroundImage: `url(${winner})`,\n                        }}\n                        alt=\"ballResult\"\n                      />\n                    </Box>\n                  </Box>\n                </Fragment>\n              ) : null}\n            </Box>\n            <Grid className={classes.bets}>\n              <Box\n                className={\n                  currentlyPicking === 1\n                    ? classes.activeRound\n                    : classes.nonActive\n                }\n              >\n                {nextRoundPlayers && nextRoundPlayers.red ? (\n                  <Box className=\"betLeft\">\n                    <Avatar\n                      className={classes.avatar2}\n                      src={nextRoundPlayers.red.avatar}\n                      variant=\"rounded\"\n                    />\n                    <h3>{nextRoundPlayers.red.username}</h3>\n                    <hr />\n                    <h5>\n                      <span>$</span> {nextRoundPlayers.red.betAmount.toFixed(2)}\n                    </h5>\n                    <h5>\n                      <span>%</span>{\" \"}\n                      {nextRoundPlayers.red.winningPercentage.toFixed(2)}\n                    </h5>\n                  </Box>\n                ) : (\n                  <Box className=\"betLeft\">\n                    <Avatar variant=\"rounded\" className={classes.avatar2} />\n                    <h3>UNKNOWN</h3>\n                    <hr />\n                    <h5>\n                      <span>$</span> 000.00\n                    </h5>\n                    <h5>\n                      <span>%</span> 00.00\n                    </h5>\n                  </Box>\n                )}\n                <Box className=\"betRight\">\n                  <img style={{ width: 20, height: 20 }} src={red} alt=\"cup\" />\n                  <h3 style={{ color: \"#ff4c4c\" }}>RED</h3>\n                </Box>\n              </Box>\n              <Box\n                className={\n                  currentlyPicking === 2\n                    ? classes.activeRound\n                    : classes.nonActive\n                }\n              >\n                {nextRoundPlayers && nextRoundPlayers.blue ? (\n                  <Box className=\"betLeft\">\n                    <Avatar\n                      className={classes.avatar2}\n                      src={nextRoundPlayers.blue.avatar}\n                      variant=\"rounded\"\n                    />\n                    <h3>{nextRoundPlayers.blue.username}</h3>\n                    <hr />\n                    <h5>\n                      <span>$</span>{\" \"}\n                      {nextRoundPlayers.blue.betAmount.toFixed(2)}\n                    </h5>\n                    <h5>\n                      <span>%</span>{\" \"}\n                      {nextRoundPlayers.blue.winningPercentage.toFixed(2)}\n                    </h5>\n                  </Box>\n                ) : (\n                  <Box className=\"betLeft\">\n                    <Avatar variant=\"rounded\" className={classes.avatar2} />\n                    <h3>UNKNOWN</h3>\n                    <hr />\n                    <h5>\n                      <span>$</span> 000.00\n                    </h5>\n                    <h5>\n                      <span>%</span> 00.00\n                    </h5>\n                  </Box>\n                )}\n                <Box className=\"betRight\">\n                  <img style={{ width: 20, height: 20 }} src={blue} alt=\"cup\" />\n                  <h3 style={{ color: \"#4c7aff\" }}>BLUE</h3>\n                </Box>\n              </Box>\n              <Box\n                className={\n                  currentlyPicking === 3\n                    ? classes.activeRound\n                    : classes.nonActive\n                }\n              >\n                {nextRoundPlayers && nextRoundPlayers.green ? (\n                  <Box className=\"betLeft\">\n                    <Avatar\n                      className={classes.avatar2}\n                      src={nextRoundPlayers.green.avatar}\n                      variant=\"rounded\"\n                    />\n                    <h3>{nextRoundPlayers.green.username}</h3>\n                    <hr />\n                    <h5>\n                      <span>$</span>{\" \"}\n                      {nextRoundPlayers.green.betAmount.toFixed(2)}\n                    </h5>\n                    <h5>\n                      <span>%</span>{\" \"}\n                      {nextRoundPlayers.green.winningPercentage.toFixed(2)}\n                    </h5>\n                  </Box>\n                ) : (\n                  <Box className=\"betLeft\">\n                    <Avatar variant=\"rounded\" className={classes.avatar2} />\n                    <h3>UNKNOWN</h3>\n                    <hr />\n                    <h5>\n                      <span>$</span> 000.00\n                    </h5>\n                    <h5>\n                      <span>%</span> 00.00\n                    </h5>\n                  </Box>\n                )}\n                <Box className=\"betRight\">\n                  <img\n                    style={{ width: 20, height: 20 }}\n                    src={green}\n                    alt=\"cup\"\n                  />\n                  <h3 style={{ color: \"#4cffa1\" }}>GREEN</h3>\n                </Box>\n              </Box>\n              <Box\n                className={\n                  currentlyPicking === 4\n                    ? classes.activeRound\n                    : classes.nonActive\n                }\n              >\n                {nextRoundPlayers && nextRoundPlayers.yellow ? (\n                  <Box className=\"betLeft\">\n                    <Avatar\n                      className={classes.avatar2}\n                      src={nextRoundPlayers.yellow.avatar}\n                      variant=\"rounded\"\n                    />\n                    <h3>{nextRoundPlayers.yellow.username}</h3>\n                    <hr />\n                    <h5>\n                      <span>$</span>{\" \"}\n                      {nextRoundPlayers.yellow.betAmount.toFixed(2)}\n                    </h5>\n                    <h5>\n                      <span>%</span>{\" \"}\n                      {nextRoundPlayers.yellow.winningPercentage.toFixed(2)}\n                    </h5>\n                  </Box>\n                ) : (\n                  <Box className=\"betLeft\">\n                    <Avatar variant=\"rounded\" className={classes.avatar2} />\n                    <h3>UNKNOWN</h3>\n                    <hr />\n                    <h5>\n                      <span>$</span> 000.00\n                    </h5>\n                    <h5>\n                      <span>%</span> 00.00\n                    </h5>\n                  </Box>\n                )}\n                <Box className=\"betRight\">\n                  <img\n                    style={{ width: 20, height: 20 }}\n                    src={yellow}\n                    alt=\"cup\"\n                  />\n                  <h3 style={{ color: \"#efff4c\" }}>YELLOW</h3>\n                </Box>\n              </Box>\n              <Box\n                className={\n                  currentlyPicking === 5\n                    ? classes.activeRound\n                    : classes.nonActive\n                }\n              >\n                {nextRoundPlayers && nextRoundPlayers.pink ? (\n                  <Box className=\"betLeft\">\n                    <Avatar\n                      className={classes.avatar2}\n                      src={nextRoundPlayers.pink.avatar}\n                      variant=\"rounded\"\n                    />\n                    <h3>{nextRoundPlayers.pink.username}</h3>\n                    <hr />\n                    <h5>\n                      <span>$</span>{\" \"}\n                      {nextRoundPlayers.pink.betAmount.toFixed(2)}\n                    </h5>\n                    <h5>\n                      <span>%</span>{\" \"}\n                      {nextRoundPlayers.pink.winningPercentage.toFixed(2)}\n                    </h5>\n                  </Box>\n                ) : (\n                  <Box className=\"betLeft\">\n                    <Avatar variant=\"rounded\" className={classes.avatar2} />\n                    <h3>UNKNOWN</h3>\n                    <hr />\n                    <h5>\n                      <span>$</span> 000.00\n                    </h5>\n                    <h5>\n                      <span>%</span> 00.00\n                    </h5>\n                  </Box>\n                )}\n                <Box className=\"betRight\">\n                  <img style={{ width: 20, height: 20 }} src={pink} alt=\"cup\" />\n                  <h3 style={{ color: \"#e84cff\" }}>PINK</h3>\n                </Box>\n              </Box>\n            </Grid>\n            <hr />\n            <Grid className={classes.players}>\n              {nextRoundPlayers && nextRoundPlayers.red && (\n                <Box className={classes.smallBet}>\n                  <Avatar src={nextRoundPlayers.red.avatar} variant=\"rounded\" className={classes.avatar2} />\n                  <Box className={classes.betInfo}>\n                    <h3>{nextRoundPlayers.red.username}</h3>\n                    <Box display=\"flex\">\n                      <h5>\n                        <span> $ </span>\n                        {nextRoundPlayers.red.betAmount.toFixed(2)}{\" \"}\n                      </h5>\n                      <h5 style={{ marginLeft: 5 }}>\n                        <span> % </span>\n                        {nextRoundPlayers.red.winningPercentage.toFixed(2)}{\" \"}\n                      </h5>\n                    </Box>\n                  </Box>\n                  <Box className={classes.outline}>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <img style={{ width: 32 }} src={red} alt=\"playingCup\" />\n                    </Box>\n                  </Box>\n                </Box>\n              )}\n              {nextRoundPlayers && nextRoundPlayers.blue && (\n                <Box className={classes.smallBet}>\n                  <Avatar\n                    className={classes.avatar2}\n                    src={nextRoundPlayers.blue.avatar}\n                    variant=\"rounded\"\n                  />\n                  <Box className={classes.betInfo}>\n                    <h3>{nextRoundPlayers.blue.username}</h3>\n                    <Box display=\"flex\">\n                      <h5>\n                        <span> $ </span>\n                        {nextRoundPlayers.blue.betAmount.toFixed(2)}{\" \"}\n                      </h5>\n                      <h5 style={{ marginLeft: 5 }}>\n                        <span> % </span>\n                        {nextRoundPlayers.blue.winningPercentage.toFixed(\n                          2\n                        )}{\" \"}\n                      </h5>\n                    </Box>\n                  </Box>\n                  <Box className={classes.outline}>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <img style={{ width: 32 }} src={blue} alt=\"playingCup\" />\n                    </Box>\n                  </Box>\n                </Box>\n              )}\n              {nextRoundPlayers && nextRoundPlayers.green && (\n                <Box className={classes.smallBet}>\n                  <Avatar\n                    className={classes.avatar2}\n                    src={nextRoundPlayers.green.avatar}\n                    variant=\"rounded\"\n                  />\n                  <Box className={classes.betInfo}>\n                    <h3>{nextRoundPlayers.green.username}</h3>\n                    <Box display=\"flex\">\n                      <h5>\n                        <span> $ </span>\n                        {nextRoundPlayers.green.betAmount.toFixed(2)}{\" \"}\n                      </h5>\n                      <h5 style={{ marginLeft: 5 }}>\n                        <span> % </span>\n                        {nextRoundPlayers.green.winningPercentage.toFixed(\n                          2\n                        )}{\" \"}\n                      </h5>\n                    </Box>\n                  </Box>\n                  <Box className={classes.outline}>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <img style={{ width: 32 }} src={green} alt=\"playingCup\" />\n                    </Box>\n                  </Box>\n                </Box>\n              )}\n              {nextRoundPlayers && nextRoundPlayers.yellow && (\n                <Box className={classes.smallBet}>\n                  <Avatar\n                    className={classes.avatar2}\n                    src={nextRoundPlayers.yellow.avatar}\n                    variant=\"rounded\"\n                  />\n                  <Box className={classes.betInfo}>\n                    <h3>{nextRoundPlayers.yellow.username}</h3>\n                    <Box display=\"flex\">\n                      <h5>\n                        <span> $ </span>\n                        {nextRoundPlayers.yellow.betAmount.toFixed(2)}{\" \"}\n                      </h5>\n                      <h5 style={{ marginLeft: 5 }}>\n                        <span> % </span>\n                        {nextRoundPlayers.yellow.winningPercentage.toFixed(\n                          2\n                        )}{\" \"}\n                      </h5>\n                    </Box>\n                  </Box>\n                  <Box className={classes.outline}>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <img\n                        style={{ width: 32 }}\n                        src={yellow}\n                        alt=\"playingCup\"\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n              )}\n              {nextRoundPlayers && nextRoundPlayers.pink && (\n                <Box className={classes.smallBet}>\n                  <Avatar\n                    className={classes.avatar2}\n                    src={nextRoundPlayers.pink.avatar}\n                    variant=\"rounded\"\n                  />\n                  <Box className={classes.betInfo}>\n                    <h3>{nextRoundPlayers.pink.username}</h3>\n                    <Box display=\"flex\">\n                      <h5>\n                        <span> $ </span>\n                        {nextRoundPlayers.pink.betAmount.toFixed(2)}{\" \"}\n                      </h5>\n                      <h5 style={{ marginLeft: 5 }}>\n                        <span> % </span>\n                        {nextRoundPlayers.pink.winningPercentage.toFixed(\n                          2\n                        )}{\" \"}\n                      </h5>\n                    </Box>\n                  </Box>\n                  <Box className={classes.outline}>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <img style={{ width: 32 }} src={pink} alt=\"playingCup\" />\n                    </Box>\n                  </Box>\n                </Box>\n              )}\n              {players\n                .sort((a, b) => b.betAmount - a.betAmount)\n                .filter(noNextRoundPlayers)\n                .map(player => (\n                  <Box key={player._id} className={classes.smallBet}>\n                    <Avatar src={player.avatar} variant=\"rounded\" className={classes.avatar2} />\n                    <Box className={classes.betInfo}>\n                      <h3 style={{ color: \"#878889\", }}>\n                        {player.username}\n                      </h3>\n                      <Box display=\"flex\">\n                        <h5>\n                          <span> $ </span>\n                          {player.betAmount.toFixed(2)}{\" \"}\n                        </h5>\n                        <h5 style={{ marginLeft: 5 }}>\n                          <span> % </span>\n                          {player.winningPercentage.toFixed(2)}{\" \"}\n                        </h5>\n                      </Box>\n                    </Box>\n                    <Box className={classes.outline}>\n                      <Box display=\"flex\" alignItems=\"center\">\n                        <img src={cupOutline} alt=\"cupOutline\" />\n                      </Box>\n                    </Box>\n                  </Box>\n                ))}\n            </Grid>\n            <br />\n            <br />\n            <br />\n            <br />\n            <hr />\n            <p style={{ color: \"#ccc\", fontWeight: \"500\", }}>History: <span style={{ color: \"#9e9e9e\", }}>(Last 5 Rounds)</span></p>\n            <br />\n            <br />\n            {prevGames.map(game => (\n              <PrevGame key={game._id} game={game} user={user} />\n            ))}\n          </Grid>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nJackpot.propTypes = {\n  user: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Jackpot);\n",
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/TimerBar.js",
    [],
    [
        "394",
        "395"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/views/TimerBarR.js",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/pfCodeSamples.js",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/roulette/PlayAmount.jsx",
    [],
    [
        "396",
        "397"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/PrivateGameJoinModal.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/chat/SkeletonMessage.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/Explode.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/crash/HistoryEntry.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/crash/PlayAmount.jsx",
    [],
    [
        "398",
        "399"
    ],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/withdraw/Bitcoin.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/withdraw/Litecoin.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/withdraw/Ethereum.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/RaceAmount.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/RoundSkeleton.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/deposit/Bitcoin.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/deposit/Litecoin.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/actions/auth.js",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/jackpot/PlayAmount.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/crash/Bets.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/cups/JoinableAmount.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/roulette/Wheel.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/cups/TotalAmount.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/AccountVerificationModal.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/components/modals/MarketModal.jsx",
    [],
    "/mnt/e/all_the_files_crypto/source_coinflip/fortunebets-xyz-master/client/src/store.js",
    [],
    {
        "ruleId": "400",
        "replacedBy": "401"
    },
    {
        "ruleId": "402",
        "replacedBy": "403"
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "405",
        "line": 23,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 23,
        "endColumn": 12
    },
    {
        "ruleId": "408",
        "severity": 1,
        "message": "409",
        "line": 73,
        "column": 3,
        "nodeType": "410",
        "messageId": "411",
        "endLine": 73,
        "endColumn": 12
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "412",
        "line": 256,
        "column": 10,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 256,
        "endColumn": 18
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "413",
        "line": 30,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 30,
        "endColumn": 16
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "414",
        "line": 31,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 31,
        "endColumn": 18
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "415",
        "line": 23,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 23,
        "endColumn": 22
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "416",
        "line": 45,
        "column": 9,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 45,
        "endColumn": 18
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "417",
        "line": 46,
        "column": 9,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 46,
        "endColumn": 18
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "418",
        "line": 509,
        "column": 7,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 509,
        "endColumn": 28
    },
    {
        "ruleId": "419",
        "severity": 1,
        "message": "420",
        "line": 796,
        "column": 6,
        "nodeType": "421",
        "endLine": 796,
        "endColumn": 16,
        "suggestions": "422"
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "423",
        "line": 24,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 24,
        "endColumn": 15
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "424",
        "line": 28,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 28,
        "endColumn": 14
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "425",
        "line": 29,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 29,
        "endColumn": 21
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "426",
        "line": 30,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 30,
        "endColumn": 21
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "427",
        "line": 31,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 31,
        "endColumn": 19
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "428",
        "line": 434,
        "column": 9,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 434,
        "endColumn": 19
    },
    {
        "ruleId": "419",
        "severity": 1,
        "message": "429",
        "line": 466,
        "column": 6,
        "nodeType": "421",
        "endLine": 466,
        "endColumn": 34,
        "suggestions": "430"
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "431",
        "line": 11,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 11,
        "endColumn": 11
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "432",
        "line": 12,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 12,
        "endColumn": 12
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "433",
        "line": 13,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 13,
        "endColumn": 12
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "434",
        "line": 14,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 14,
        "endColumn": 15
    },
    {
        "ruleId": "404",
        "severity": 1,
        "message": "435",
        "line": 15,
        "column": 8,
        "nodeType": "406",
        "messageId": "407",
        "endLine": 15,
        "endColumn": 13
    },
    {
        "ruleId": "400",
        "replacedBy": "436"
    },
    {
        "ruleId": "402",
        "replacedBy": "437"
    },
    {
        "ruleId": "400",
        "replacedBy": "438"
    },
    {
        "ruleId": "402",
        "replacedBy": "439"
    },
    {
        "ruleId": "400",
        "replacedBy": "440"
    },
    {
        "ruleId": "402",
        "replacedBy": "441"
    },
    {
        "ruleId": "419",
        "severity": 1,
        "message": "429",
        "line": 451,
        "column": 6,
        "nodeType": "421",
        "endLine": 451,
        "endColumn": 34,
        "suggestions": "442"
    },
    {
        "ruleId": "400",
        "replacedBy": "443"
    },
    {
        "ruleId": "402",
        "replacedBy": "444"
    },
    {
        "ruleId": "419",
        "severity": 1,
        "message": "420",
        "line": 754,
        "column": 6,
        "nodeType": "421",
        "endLine": 754,
        "endColumn": 16,
        "suggestions": "445"
    },
    {
        "ruleId": "400",
        "replacedBy": "446"
    },
    {
        "ruleId": "402",
        "replacedBy": "447"
    },
    {
        "ruleId": "448",
        "severity": 1,
        "message": "449",
        "line": 19,
        "column": 1,
        "nodeType": "450",
        "endLine": 73,
        "endColumn": 3
    },
    {
        "ruleId": "400",
        "replacedBy": "451"
    },
    {
        "ruleId": "402",
        "replacedBy": "452"
    },
    {
        "ruleId": "400",
        "replacedBy": "453"
    },
    {
        "ruleId": "402",
        "replacedBy": "454"
    },
    {
        "ruleId": "419",
        "severity": 1,
        "message": "455",
        "line": 850,
        "column": 6,
        "nodeType": "421",
        "endLine": 850,
        "endColumn": 16,
        "suggestions": "456"
    },
    {
        "ruleId": "400",
        "replacedBy": "457"
    },
    {
        "ruleId": "402",
        "replacedBy": "458"
    },
    {
        "ruleId": "400",
        "replacedBy": "459"
    },
    {
        "ruleId": "402",
        "replacedBy": "460"
    },
    {
        "ruleId": "400",
        "replacedBy": "461"
    },
    {
        "ruleId": "402",
        "replacedBy": "462"
    },
    "no-native-reassign",
    [
        "463"
    ],
    "no-negated-in-lhs",
    [
        "464"
    ],
    "no-unused-vars",
    "'Link' is defined but never used.",
    "Identifier",
    "unusedVar",
    "no-dupe-keys",
    "Duplicate key 'userlevel'.",
    "ObjectExpression",
    "unexpected",
    "'lastRace' is assigned a value but never used.",
    "'InfoIcon' is defined but never used.",
    "'CasinoIcon' is defined but never used.",
    "'LinearProgress' is defined but never used.",
    "'rollAudio' is assigned a value but never used.",
    "'pickAudio' is assigned a value but never used.",
    "'ColorCircularProgress' is assigned a value but never used.",
    "react-hooks/exhaustive-deps",
    "React Hook useEffect has missing dependencies: 'fetchData' and 'gameRolled'. Either include them or remove the dependency array.",
    "ArrayExpression",
    [
        "465"
    ],
    "'Tooltip' is defined but never used.",
    "'Dialog' is defined but never used.",
    "'DialogActions' is defined but never used.",
    "'DialogContent' is defined but never used.",
    "'DialogTitle' is defined but never used.",
    "'parseState' is assigned a value but never used.",
    "React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",
    [
        "466"
    ],
    "'cup' is defined but never used.",
    "'spin' is defined but never used.",
    "'king' is defined but never used.",
    "'jackpot' is defined but never used.",
    "'crash' is defined but never used.",
    [
        "463"
    ],
    [
        "464"
    ],
    [
        "463"
    ],
    [
        "464"
    ],
    [
        "463"
    ],
    [
        "464"
    ],
    [
        "467"
    ],
    [
        "463"
    ],
    [
        "464"
    ],
    [
        "468"
    ],
    [
        "463"
    ],
    [
        "464"
    ],
    "import/no-anonymous-default-export",
    "Assign arrow function to a variable before exporting as module default",
    "ExportDefaultDeclaration",
    [
        "463"
    ],
    [
        "464"
    ],
    [
        "463"
    ],
    [
        "464"
    ],
    "React Hook useEffect has a missing dependency: 'newRound'. Either include it or remove the dependency array.",
    [
        "469"
    ],
    [
        "463"
    ],
    [
        "464"
    ],
    [
        "463"
    ],
    [
        "464"
    ],
    [
        "463"
    ],
    [
        "464"
    ],
    "no-global-assign",
    "no-unsafe-negation",
    {
        "desc": "470",
        "fix": "471"
    },
    {
        "desc": "472",
        "fix": "473"
    },
    {
        "desc": "472",
        "fix": "474"
    },
    {
        "desc": "470",
        "fix": "475"
    },
    {
        "desc": "476",
        "fix": "477"
    },
    "Update the dependencies array to be: [addToast, fetchData, gameRolled]",
    {
        "range": "478",
        "text": "479"
    },
    "Update the dependencies array to be: [isLoading, isAuthenticated, fetchData]",
    {
        "range": "480",
        "text": "481"
    },
    {
        "range": "482",
        "text": "481"
    },
    {
        "range": "483",
        "text": "479"
    },
    "Update the dependencies array to be: [addToast, newRound]",
    {
        "range": "484",
        "text": "485"
    },
    [
        21025,
        21035
    ],
    "[addToast, fetchData, gameRolled]",
    [
        11493,
        11521
    ],
    "[isLoading, isAuthenticated, fetchData]",
    [
        11194,
        11222
    ],
    [
        19805,
        19815
    ],
    [
        22088,
        22098
    ],
    "[addToast, newRound]"
]